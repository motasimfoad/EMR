{"version":3,"sources":["assets/img/damir-bosnjak.jpg","assets/img/mike.jpg","assets/img/faces/ayo-ogunseinde-2.jpg","assets/img/faces/joe-gardner-2.jpg","assets/img/faces/clem-onojeghuo-2.jpg","logo.svg","components/CustomButton/CustomButton.jsx","components/Prescription_Update/Prescription_Update.jsx","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CardElements/CardAuthor.jsx","components/FormInputs/FormInputs.jsx","views/UserPage/UserPage.jsx","views/Auth/Auth.jsx","views/Prescription/Prescription.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","routes/dashboard.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","routes/index.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","CustomButton","_this$props","this","props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","className","rest","Object","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","react_default","a","createElement","reactstrap_es","assign","children","Component","Prescription_Update","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pname","history","location","some","nid","docname","drid","inputAddress","phnno","inputDetails","inputMed","viewPresciption","handleChange","bind","assertThisInitialized","evt","setState","defineProperty","target","id","value","_this2","react_apollo_browser_umd","mutation","gql","_templateObject","variables","owner","docid","chember","details","med","phn","updatePrescription","_ref","data","loading","error","react_loading_default","type","color","height","width","style","top","src","alt","components_CustomButton_CustomButton","href","md","onSubmit","handleSubmit","for","placeholder","onChange","size","onClick","React","Stats","stats","i","length","push","key","t","Dashboard","pathname","logInfoId","logInfo","logInfoToken","console","log","xs","sm","lg","tag","components_Stats_Stats","react_chartjs_2_es","dashboard24HoursPerformanceChart","options","dashboardEmailStatisticsChart","dashboardNASDAQChart","CardAuthor","avatar","avatarAlt","title","description","FieldGroup","focus","label","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","onFocus","e","onBlur","FormInputs","_Component","apply","arguments","inherits","createClass","row","ncols","FormInputs_FieldGroup","proprieties","User","damirBosnjak","CardElements_CardAuthor","mike","ayoOgunseinde2","outline","joeGardner2","clemOnojeghuo2","components_FormInputs_FormInputs","disabled","defaultValue","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","toggle","login","register","tab","client","mutate","Auth_templateObject","email","password","then","result","signinUser","user","utype","name","phone","catch","alert","_templateObject2","_this3","_this4","tabs","classnames","active","tabId","ListUser","query","Prescription_templateObject","allPrescriptions","map","_ref2","createdAt","updatedAt","up","preDelete","isOpen","modal","viewPresciptionId","bordered","ps","dashRoutes","path","component","Prescription","delete","confirmAlert","buttons","Prescription_templateObject2","refetchQueries","_templateObject3","expand","inline","Prescription_ListUser","Prescription_Create","Prescription_Create_templateObject","CreatePrescription","createPrescription","UserPage","Update_Prescription","pro","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","indexOf","fluid","ref","openSidebar","getBrand","navbar","Footer","default","Date","getYear","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","NavLink","to","activeClassName","handleActiveClick","handleBgClick","backgroundColor","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","Unauth","back","Search","text","inputText","mode","handleSave","handleEdit","display","logOut","searchText","Search_templateObject","required","withApollo","Docdash","search","cp","uname","CP_doc","CP_doc_templateObject","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","UserPrescription_templateObject","indexRoutes","UserPrescription","UserPrescription_ListUser","d","__webpack_exports__","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","HttpLink","uri","ReactDOM","render","BrowserRouter","Router","getElementById","canvas","labels","datasets","borderColor","pointRadius","pointHoverRadius","borderWidth","legend","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","xAxes","barPercentage","padding","pieceLabel","precision","fill","pointBorderColor","pointBorderWidth","position"],"mappings":"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","file":"static/js/main.2ae3b3f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike.aab414f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ayo-ogunseinde-2.bfc688ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joe-gardner-2.76ff47ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clem-onojeghuo-2.bb4b9ac9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/prescription\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\nclass Dashboard extends React.Component  {\n   \n \n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   modal: false,\n    //    logInfoId : '',\n    // };\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n      }\n        console.log(this.state.logInfoId);\n    }\n}\n  \n  render() {\n  \n    \n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CardAuthor extends React.Component {\n  render() {\n    return (\n      <div className=\"author\">\n        <a href={this.props.link ? this.props.link : \"#\"}>\n          <img\n            className=\"avatar border-gray\"\n            src={this.props.avatar}\n            alt={this.props.avatarAlt}\n          />\n          <h5 className=\"title\">{this.props.title}</h5>\n        </a>\n        <p className=\"description\">{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nCardAuthor.propTypes = {\n  // Where the user to be redirected on clicking the avatar\n  link: PropTypes.string,\n  avatar: PropTypes.string,\n  avatarAlt: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default CardAuthor;\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, CardFooter, Row, Col } from \"reactstrap\";\n\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport damirBosnjak from \"assets/img/damir-bosnjak.jpg\";\nimport mike from \"assets/img/mike.jpg\";\nimport ayoOgunseinde2 from \"assets/img/faces/ayo-ogunseinde-2.jpg\";\nimport joeGardner2 from \"assets/img/faces/joe-gardner-2.jpg\";\nimport clemOnojeghuo2 from \"assets/img/faces/clem-onojeghuo-2.jpg\";\n\nclass User extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col md={4} xs={12}>\n            <Card className=\"card-user\">\n              <div className=\"image\">\n                <img src={damirBosnjak} alt=\"...\" />\n              </div>\n              <CardBody>\n                <CardAuthor\n                  avatar={mike}\n                  avatarAlt=\"...\"\n                  title=\"Chet Faker\"\n                  description=\"@chetfaker\"\n                />\n                <p className=\"description text-center\">\n                  \"I like the way you work it{\" \"}<br/>\n                    No diggity <br/>\n                    I wanna bag it up\"\n                </p>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"button-container\">\n                  <Row>\n                    <Col xs={6} sm={6} md={6} lg={3} className=\"ml-auto\">\n                      <h5>\n                        12\n                        <br/>\n                        <small>Files</small>\n                      </h5>\n                    </Col>\n                    <Col xs={6} sm={6} md={6} lg={4} className=\"mr-auto ml-auto\">\n                      <h5>\n                        2GB\n                        <br/>\n                        <small>Used</small>\n                      </h5>\n                    </Col>\n                    <Col lg={3} className=\"mr-auto\">\n                      <h5>\n                        24,6$\n                        <br/>\n                        <small>Spent</small>\n                      </h5>\n                    </Col>\n                  </Row>\n                </div>\n              </CardFooter>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Team Members</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ul className=\"list-unstyled team-members\">\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={ayoOgunseinde2} alt=\"ayoOgunseinde2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        DJ Khaled\n                        <br />\n                        <span className=\"text-muted\">\n                          <small>\n                          Offline\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={joeGardner2} alt=\"joeGardner2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Creative Tim\n                        <br />\n                        <span className=\"text-success\">\n                          <small>\n                          Available\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={clemOnojeghuo2} alt=\"clemOnojeghuo2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Flume\n                        <br />\n                        <span className=\"text-danger\">\n                          <small>\n                          Busy\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                </ul>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md={8} xs={12}>\n            <Card className=\"card-user\">\n              <CardHeader>\n                <CardTitle>Edit Profile</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <form>\n                  <FormInputs\n                    ncols={[\"col-md-5 pr-1\", \"col-md-3 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"Company (disabled)\",\n                        inputProps: {\n                          type: \"text\",\n                          disabled: true,\n                          defaultValue: \"Creative Code Inc.\"\n                        }\n                      },\n                      {\n                        label: \"Username\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"chetfaker\"\n                        }\n                      },\n                      {\n                        label: \"Email address\",\n                        inputProps: {\n                          type: \"email\",\n                          placeholder: \"Email\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-6 pr-1\", \"col-md-6 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"First Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"First Name\",\n                          defaultValue: \"Chet\"\n                        }\n                      },\n                      {\n                        label: \"Last Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Last Name\",\n                          defaultValue: \"Faker\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"Address\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Home Address\",\n                          defaultValue:\n                            \"Melbourne, Australia\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-4 pr-1\", \"col-md-4 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"City\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Melbourne\",\n                          placeholder: \"City\"\n                        }\n                      },\n                      {\n                        label: \"Country\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Australia\",\n                          placeholder: \"Country\"\n                        }\n                      },\n                      {\n                        label: \"Postal Code\",\n                        inputProps: {\n                          type: \"number\",\n                          placeholder: \"ZIP Code\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"About Me\",\n                        inputProps: {\n                          type: \"textarea\",\n                          defaultValue:\n                            \"Oh so, your weak rhyme You doubt I'll bother, reading into it\",\n                          placeholder: \"Here can be your description\"\n                        }\n                      }\n                    ]}\n                  />\n                  <Row>\n                    <div className=\"update ml-auto mr-auto\">\n                      <Button color=\"primary\" round>Update Profile</Button>\n                    </div>\n                  </Row>\n                </form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\n\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n      else {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n async register(){\n  await client.mutate({\n    mutation: gql`\n       mutation createUser($email: String!, $password: String!){\n        createUser(\n          authProvider : {\n            email: { \n              email: $email, \n              password: $password \n              }\n          }\n      ) {\n        id\n      }\n    }\n    `,\n    \n    variables: {\n      email: this.state.regEmail,\n      password: this.state.regPass\n    },\n\n  })\n  .then(result => { this.props.history.push({\n    pathname: '/dashboard',\n    state: { logInfo: [result.data.signinUser.token, \n                    result.data.signinUser.user.id] }\n  });\n   })\n  .catch(error => { console.log(error)});\n}\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\">CVIS</span><b> EMR</b> </h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        \n        <Button type=\"submit\" color=\"primary\" onClick={this.register}>Register</Button>\n      </form>\n\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    // this.setState({\n    //   data\n    // });\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    const obj = await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup className={\"no-border\"}>\n        <Input type=\"text\" placeholder=\"Search\"/>\n      </FormGroup>\n      <Button color=\"neutral\" icon round>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Auth from \"views/Auth/Auth.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/user-page\",\n    name: \"User Profile\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  {\n    pro: true,\n    path: \"/\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  //{ redirect: true, path: \"/Auth\", pathTo: \"/Auth\", name: \"Auth\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { \n  \n  Button,\n \n\n} from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n\n    };\n\n    this.back = this.back.bind(this);\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" />\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  CardText, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  \n \n\n} from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { timesSeries } from \"async\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n     \n\n    // };\n\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n      <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Add Prescription</CardTitle>\n            <Button onClick={this.cp} color=\"primary\">Add</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Search Prescription</CardTitle>\n            <Button onClick={this.search} color=\"primary\">Search</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Log Out</CardTitle>\n            <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n        </CardBody>\n      </Card>\n      </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   text: '', \n    //   inputText: '', \n    //   mode:'view',\n    //   result : []\n    // };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n      console.log(this.state.docname);\n  }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    // this.setState({\n    //   data\n    // });\n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n      nid: this.props.history.location.state.some[10],\n      docname: this.props.history.location.state.some[1],\n      drid: this.props.history.location.state.some[5],\n      inputAddress: this.props.history.location.state.some[6],\n      phnno: this.props.history.location.state.some[9],\n      inputDetails: this.props.history.location.state.some[2],\n      inputMed: this.props.history.location.state.some[7],\n      viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n          logInfoToken : this.props.history.location.state.logInfo[0],\n          currentdocname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.currentdocname);\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  CardText, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  \n \n\n} from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { timesSeries } from \"async\";\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.phone);\n        console.log(this.state.nid);\n        \n        \n        \n        \n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Add Prescription</CardTitle>\n            <Button onClick={this.cp} color=\"primary\">Add</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>View Prescription</CardTitle>\n            <Button onClick={this.search} color=\"primary\">View</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Log Out</CardTitle>\n            <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n        </CardBody>\n      </Card>\n      </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.nid);\n        console.log(this.state.phone);\n        \n        \n        \n        \n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport Prescription_Update from \"./components/Prescription_Update/Prescription_Update\";\n\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  link: new HttpLink(),\n  // credentials: 'same-origin',\n  // headers: {\n  //   \"Access-Control-Allow-Origin\": \"*\", // Required for CORS support to work\n  //   \"Access-Control-Allow-Credentials\" : true\n  // },\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}