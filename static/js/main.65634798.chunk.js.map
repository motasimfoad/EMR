{"version":3,"sources":["logo.svg","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CustomButton/CustomButton.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","views/Report/Report.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Prescription_Update/Prescription_Update.jsx","components/CR_Admin/CR_Admin.jsx","components/Update_User_Admin/Update_User_Admin.jsx","views/SearchReportAdmin/SearchReportAdmin.jsx","components/Footer/Footer.jsx","views/AdminSearch/AdminSearch.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","views/AdminSearchUser/AdminSearchUser.jsx","routes/dashboard.jsx","components/Header/Header.jsx","views/Auth/Auth.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","views/HospitalDashboard/HospitalDashboard.jsx","components/CP_Hospital/CP_Hospital.jsx","views/SearchReport/SearchReport.jsx","components/CP_User/CP_User.jsx","views/UserReport/UserReport.jsx","views/SearchReportDoc/SearchReportDoc.jsx","components/Reg/Reg.jsx","routes/index.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","USER_COUNT","gql","_templateObject","REP_COUNT","_templateObject2","PRES_COUNT","_templateObject3","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","location","state","pathname","logInfoId","logInfo","logInfoToken","lo","_this2","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_apollo_browser_umd","query","_ref","loading","error","data","concat","message","userCount","count","_ref2","reportCount","_ref3","prescriptionCount","react_chartjs_2_es","dashboard24HoursPerformanceChart","options","width","height","dashboardEmailStatisticsChart","dashboardNASDAQChart","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","backgroundColor","borderWidth","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","gridLines","zeroLineColor","drawTicks","drawBorder","xAxes","layout","padding","left","right","top","bottom","CustomButton","_this$props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","assign","ListUser","UserPage_templateObject","react_loading_default","type","color","allUsers","map","id","createdAt","updatedAt","phone","nid","name","utype","email","style","src","alt","components_CustomButton_CustomButton","onClick","toggle","up","preDelete","isOpen","modal","viewPresciptionId","bordered","UserPage","bind","assertThisInitialized","delete","setState","some","confirmAlert","title","buttons","alert","client","mutate","mutation","UserPage_templateObject2","variables","refetchQueries","UserPage_templateObject3","UserPage_ListUser","Prescription_templateObject","allPrescriptions","docname","details","owner","docid","chember","med","phn","Prescription","Prescription_templateObject2","Prescription_templateObject3","Prescription_ListUser","Report_templateObject","allReports","imageUrl","imageid","phoneid","href","target","Report","Report_templateObject2","Report_templateObject3","Report_ListUser","Prescription_Create","pname","drid","inputAddress","phnno","inputDetails","inputMed","handleChange","evt","defineProperty","value","Prescription_Create_templateObject","CreatePrescription","createPrescription","onSubmit","handleSubmit","for","placeholder","onChange","size","Prescription_Update","viewPresciption","Prescription_Update_templateObject","updatePrescription","CR_Admin","onDrop","files","FormData","append","fetch","method","body","then","response","json","image","imageId","url","back","submit","window","reload","maxWidth","e","dist_es","accept","multiple","role","CR_Admin_templateObject","imageID","result","_this3","catch","console","log","Update_User_Admin","Update_User_Admin_templateObject","updateUser","disabled","SearchReportAdmin","text","inputText","handleSave","handleEdit","SearchReportAdmin_templateObject","SearchReportAdmin_templateObject2","searchText","SearchReportAdmin_templateObject3","_this4","required","expand","inline","withApollo","Footer","default","fluid","Date","getYear","AdminSearch","logOut","AdminSearch_templateObject","AdminSearch_templateObject2","AdminSearch_templateObject3","components_Footer_Footer","ps","AdminSearchUser","AdminSearchUser_templateObject","AdminSearchUser_templateObject2","AdminSearchUser_templateObject3","dashRoutes","path","component","Create_Prescription","Update_Prescription","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","innerWidth","addEventListener","updateColor","indexOf","ref","openSidebar","getBrand","navbar","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","to","activeClassName","handleActiveClick","handleBgClick","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","Client","GraphQLClient","headers","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","login","reg","tab","Auth_templateObject","password","signinUser","user","pass","request","tabs","classnames","active","tabId","Unauth","Search","Search_templateObject","Docdash","search","cp","sr","uname","CP_doc","CP_doc_templateObject","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","searchReport","UserPrescription_templateObject","UserPrescription","UserPrescription_ListUser","HospitalDashboard","CP_Hospital","hospitalId","hospitalName","CP_Hospital_templateObject","SearchReport","SearchReport_templateObject","CP_User","CP_User_templateObject","UserReport_templateObject","UserReport","UserReport_ListUser","SearchReportDoc","SearchReportDoc_templateObject","indexRoutes","Reg","d","__webpack_exports__","src_client","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","uri","ReactDOM","render","BrowserRouter","Router","getElementById","enabled","fontColor","beginAtZero","maxTicksLimit","barPercentage","pieceLabel","precision"],"mappings":"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","file":"static/js/main.65634798.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst USER_COUNT = gql`\n {\n      userCount: _allUsersMeta {\n        count\n      }\n    }\n`;\n\nconst REP_COUNT = gql`\n {\n      reportCount: _allReportsMeta {\n        count\n      }\n    }\n`;\n\nconst PRES_COUNT = gql`\n {\n    prescriptionCount: _allPrescriptionsMeta {\n    count\n  }\n    }\n`;\n\nclass Dashboard extends React.Component  {\n   \n constructor(props) {\n    super(props);\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n         lo : '50'\n      }\n    }\n}\n  \n  render() {\n  \n    const chartColor = '#FFFFFF';\n\n      const data = (canvas) => {\n          var ctx = canvas.getContext(\"2d\");\n\n          var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n          gradientStroke.addColorStop(0, '#80b6f4');\n          gradientStroke.addColorStop(1, chartColor);\n\n          var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n          gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n          gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\n          return {\n              labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n              datasets: [{\n                  label: \"Active Users\",\n                  borderColor: \"#f96332\",\n                  pointBorderColor: \"#FFF\",\n                  pointBackgroundColor: \"#f96332\",\n                  pointBorderWidth: 2,\n                  pointHoverRadius: 4,\n                  pointHoverBorderWidth: 1,\n                  pointRadius: 4,\n                  fill: true,\n                  backgroundColor: gradientFill,\n                  borderWidth: 2,\n                  data: [this.state.lo, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630]\n              }]\n          }\n      };\n      const options = {\n          maintainAspectRatio: false,\n          legend: {\n              display: false\n          },\n          tooltips: {\n              bodySpacing: 4,\n              mode:\"nearest\",\n              intersect: 0,\n              position:\"nearest\",\n              xPadding:10,\n              yPadding:10,\n              caretPadding:10\n          },\n          responsive: 1,\n          scales: {\n              yAxes: [{\n                  display:0,\n                  ticks: {\n                      display: false\n                  },\n                  gridLines: {\n                      zeroLineColor: \"transparent\",\n                      drawTicks: false,\n                      display: false,\n                      drawBorder: false\n                  }\n              }],\n              xAxes: [{\n                  display:0,\n                  ticks: {\n                      display: false\n                  },\n                  gridLines: {\n                      zeroLineColor: \"transparent\",\n                      drawTicks: false,\n                      display: false,\n                      drawBorder: false\n                  }\n              }]\n          },\n          layout:{\n              padding:{left:0,right:0,top:15,bottom:15}\n          }\n      };\n    \n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Allocated Server Capacity</p>\n                      <CardTitle tag=\"p\">500MB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Currently Updated\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-02 text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total User Registered</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={USER_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            <div>{data.userCount.count}</div>\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-credit-card text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Reports </p>\n                      <CardTitle tag=\"p\">\n                      <Query query={REP_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            <div>{data.reportCount.count}</div>\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-copy-04 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Prescriptions</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={PRES_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            <div>{data.prescriptionCount.count}</div>\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col>\n          <Card>\n          <Line data={data} options={options} />\n          </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n        return data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n    this.props.history.push({\n      pathname: '/uua',\n      state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Report extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/prescription\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\nclass CR_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneid: '',\n    };\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    window.location.reload()\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n          <div className=\"content\">\n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                <ModalHeader toggle={this.toggle}></ModalHeader>\n                <ModalBody className=\"crhosCenter\">\n                  <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n                  <br />\n                  <br />\n                <h3>Report Successfully Added</h3>\n                </ModalBody>\n                <ModalFooter>\n                \n                </ModalFooter>\n              </Modal>\n            <div className=\"cphelperMain\">\n                  <h2>Add Report for a Patient</h2>\n                  <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n                  Upload the image of your prescription.<br/>\n                  The submit button will automatically apper on your screen.\n                  </pre>\n                  <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n                    <Input\n                      className='cpHospitalInput'\n                      value={this.state.phoneid}\n                      placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n                      onChange={(e) => this.setState({phoneid: e.target.value})}\n                    />\n                    <br/>\n                    {!this.state.imageId &&\n                    <Dropzone\n                      className=\"dz\"\n                      onDrop={this.onDrop}\n                      accept='image/*'\n                      multiple={false}\n                    >\n                      <div><b>Drop an image or click to choose</b></div> \n                    </Dropzone>}\n                    {this.state.imageUrl &&\n                      <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n                    \n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"danger\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-remove \"/> &nbsp;Discard</Button>\n                    \n                    }\n                  </div>\n                </div>\n              </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CR_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Update_User_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.history.location.state.some[0],\n      createdAt: props.history.location.state.some[1],\n      updatedAt: props.history.location.state.some[2],\n      phone: props.history.location.state.some[3],\n      nid: props.history.location.state.some[4],\n      name: props.history.location.state.some[5],\n      utype: props.history.location.state.some[6],\n      email: props.history.location.state.some[7],\n      \n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updateUser(\n        $id : ID!,\n        $phone: String!,\n        $nid: String,\n        $name: String!,\n        $utype: String!,\n       \n       ){\n          updateUser(\n              id : $id,\n            phone : $phone,\n            nid  : $nid ,\n            name  : $name,\n            utype   : $utype,\n           \n          ){\n            id\n            name\n            email\n            phone\n           }\n        }\n      `}\n      variables = {{\n        id : this.state.id,\n        phone: this.state.phone,\n        nid: this.state.nid,\n        name: this.state.name,\n        utype: this.state.utype,\n       \n      }}\n  >\n    {(updateUser, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>User Info Updated Successfully!!</CardTitle>\n          <CardText>\n          User ID : <b>{data.updateUser.id}</b>< br />\n          Name : <b>{data.updateUser.name}</b>< br />\n          Email : <b>{data.updateUser.email}</b>< br />\n          Contact No : <b>{data.updateUser.phone}</b>< br />\n          </CardText>\n          <Button href=\"/list_users\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">User Name</Label>\n              <Input type=\"text\"  id=\"name\" placeholder={this.state.name} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">ID/ NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">User Id (System)</Label>\n              <Input type=\"text\"  id=\"id\" placeholder={this.state.id} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Created At</Label>\n              <Input type=\"text\"  id=\"createdAt\" placeholder={this.state.createdAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Updated At</Label>\n            <Input type=\"text\"  id=\"updatedAt\" placeholder={this.state.updatedAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">User contact no</Label>\n              <Input type=\"text\"  id=\"phone\" placeholder={this.state.phone} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">User Role</Label>\n            <Input type=\"text\"  id=\"utype\" placeholder={this.state.utype} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Email</Label>\n              <Input type=\"text\"  id=\"email\" placeholder={this.state.email} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updateUser()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Update_User_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\n\n\nclass SearchReportAdmin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n   }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n \n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        </Alert>\n      \n       </div>\n       \n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportAdmin);\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n           \n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearch);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearchUser extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n      await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\nup(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n \n  this.props.history.push({\n    pathname: '/uua',\n    state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n  })\n}\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allUsers($searchText: String!){\n      \n          allUsers\n          (\n            filter :{\n            OR: [\n              {\n                nid : $searchText\n              },\n              {\n                phone : $searchText\n              },\n              {\n                email : $searchText\n              }\n            ]\n          }\n          )\n          {\n            name\n            id\n            phone\n            nid\n            utype\n            createdAt\n            updatedAt\n            email\n          }\n\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allUsers);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for User <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id/ email\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        \n        </form>\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allUsers.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No User found corresponding to given id/nid/phone/passport/birthcirtificate/email.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>    \n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearchUser);\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Report from \"views/Report/Report.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\nimport CR_Admin from \"../components/CR_Admin/CR_Admin.jsx\";\nimport Update_User_Admin from \"components/Update_User_Admin/Update_User_Admin.jsx\";\nimport SearchReportAdmin from \"../views/SearchReportAdmin/SearchReportAdmin.jsx\";\nimport AdminSearch from \"../views/AdminSearch/AdminSearch.jsx\";\nimport AdminSearchUser from \"../views/AdminSearchUser/AdminSearchUser.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"List Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/sp_admin\",\n    name: \"Search Prescription\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearch\n  },\n  {\n    path: \"/list_users\",\n    name: \"List Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/s_u\",\n    name: \"Search User\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearchUser\n  },\n  {\n    path: \"/list_report\",\n    name: \"List Report\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: Report\n  },\n  {\n    path: \"/cr_admin\",\n    name: \"Add Report\",\n    icon: \"nc-icon nc-cloud-upload-94\",\n    component: CR_Admin\n  },\n  {\n    path: \"/sr_admin\",\n    name: \"Search Report\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: SearchReportAdmin\n  },\n  {\n    path: \"/auth\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  {\n    path: \"/uua\",\n    component: Update_User_Admin\n  },\n  \n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  \n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst Client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n\n }\n});\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    \n    this.reg = this.reg.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Hospital\") {\n        this.props.history.push({\n          pathname: '/hospitaldashboard',\n          state: { logInfo: [result.data.signinUser.token, \n            result.data.signinUser.user.id,\n            result.data.signinUser.user.phone,\n            result.data.signinUser.user.nid,\n          result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n       else if(result.data.signinUser.user.utype === \"Admin\") {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n\n\nreg() {\n  const email = this.state.regEmail\n  const pass = this.state.regPass \n  const nid = this.state.regId\n  const phone = this.state.regPhn\n  const utype = this.state.regType\n  const name = this.state.regName\n\n  return Client.request(`\n   mutation(\n     $email : String!\n     $pass : String!\n     $nid : String\n     $phone : String\n     $utype : String\n     $name : String\n   ){\n    createUser(\n      authProvider : {\n        email : {\n          email : $email\n          password : $pass\n        }\n      }\n      nid : $nid\n      phone : $phone\n      utype : $utype \n      name : $name\n    ){\n      id\n    }\n  }\n \n`,\n{\n  email,\n  pass ,\n  nid,\n  phone,\n  utype,\n  name\n})\n.then(result => { \n  alert(\"User registered successfully\")\n  \n\n})\n.catch(error => { alert(\"Email Id is already registered\") })\n}\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\">CVIS</span><b> EMR</b> </h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Please Select</option>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        </form>\n      <Button type=\"submit\" color=\"primary\" onClick={this.reg}>Register</Button>\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport { \n  Button\n } from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n     this.back = this.back.bind(this);\n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" alt=\"Unauthoized\"/>\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n          <Navbar expand=\"lg\" color=\"dark\">\n          <Form inline className=\"ml-auto\">\n          <FormGroup >\n            <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n          </FormGroup>\n          <Button  color=\"neutral\" icon round onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n          </Form>\n          </Navbar>\n          <div>\n          <Row>\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n          <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n            <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n              <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription</CardTitle>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>Search Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.sr} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n   }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    \n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n            nid: this.props.history.location.state.some[10],\n            docname: this.props.history.location.state.some[1],\n            drid: this.props.history.location.state.some[5],\n            inputAddress: this.props.history.location.state.some[6],\n            phnno: this.props.history.location.state.some[9],\n            inputDetails: this.props.history.location.state.some[2],\n            inputMed: this.props.history.location.state.some[7],\n            viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n            logInfoToken : this.props.history.location.state.logInfo[0],\n            currentdocname : this.props.history.location.state.logInfo[2]\n        }\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n          if (loading) return <div>\n          <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n          </div>;\n          if (data) return  <div className=\"successCreateNoify\">\n            <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n              <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n              <CardTitle>Prescription Updated Successfully!!</CardTitle>\n              <CardText>\n              Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n              Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n              Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n              Health Issues : <b>{data.updatePrescription.details}</b>< br />\n              Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n              </CardText>\n              <Button onClick={this.back}>Back</Button>\n            </Card>\n          </div> ;\n          if (error) return <p>Error :(</p>;\n          \n            \n          return  <Row>\n          <Col md={12}>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Update Prescription</h5>\n                <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n            </CardHeader>\n              <CardBody>\n              <form onSubmit={this.handleSubmit}>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"pname\">Patient Name</Label>\n                  <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n                  <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"docname\">Doctors Name</Label>\n                  <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"drid\">Doctors ID</Label>\n                  <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                <Label for=\"inputAddress\">Chember Address</Label>\n                <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"phnno\">Patient contact no</Label>\n                  <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"inputDetails\">Details</Label>\n                <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n              </FormGroup>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-12\">\n                  <Label for=\"inputMed\">Medicin</Label>\n                  <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n                </FormGroup>\n              \n              </div>\n              \n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n            </form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>;\n                }}\n            </Mutation>\n\n        </div>\n        );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.searchReport = this.searchReport.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n     }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_user',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  \n search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  searchReport() {\n    this.props.history.push({\n      pathname: '/userreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n          <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription / Report</CardTitle>\n                  <pre>You will find this files under view report section</pre>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>View Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.searchReport} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass HospitalDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n        }\n      }\n   }\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_hospital',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/search',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img style={{width : 300}} src =\"https://images.vexels.com/media/users/3/144223/isolated/preview/f1d0807f8ffad0197757d840bdc97d0b--cone-do-registro-m-dico-by-vexels.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Add Report</CardTitle>\n                <Button onClick={this.cp} color=\"primary\">Add</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>View Prescription/Report</CardTitle>\n                <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                <Button onClick={this.sr} color=\"primary\">Report</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Log Out</CardTitle>\n                <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n            </CardBody>\n          </Card>\n          </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default HospitalDashboard;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_Hospital extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/hospitaldashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your prescription.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n            <ModalHeader toggle={this.toggle}></ModalHeader>\n            <ModalBody className=\"crhosCenter\">\n              <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n              <br />\n              <br />\n            <h3>Report Successfully Added</h3>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"info\" onClick={this.back}>Back</Button>\n              <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_Hospital;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n        <Navbar expand=\"lg\" color=\"dark\">\n        <Form inline className=\"ml-auto\">\n        <FormGroup >\n          <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n        </FormGroup>\n        <Button  color=\"neutral\" icon round onClick={this.display}>\n        <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n        </Form>\n        </Navbar>\n        <div>\n        <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReport);\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader,\n  ModalBody, \n  ModalFooter,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription / Report</h2>\n        <pre className=\"cpHospitalText\">Enter your NID/Birth Cirtificate no/ Passport No/ Phone No associated with <b>this account</b>. <br/>\n        Upload the image of your prescription/report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n    </div>\n  < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allReports($phn: String, $nid: String){\n      \n      allReports(\n        filter : {\n          OR : [{\n            phoneid : $phn\n          }, {\n            phoneid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        imageid\n        imageUrl\n        phoneid\n        createdAt\n        updatedAt\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n         \n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReportDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportDoc);\n","import React from \"react\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n}\n});\n\nclass Reg extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       email: \"rid@wan2.com\",\n       password : \"llalal\"\n      \n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.reg = this.reg.bind(this);\n    }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  reg() {\n    return client.request(`\n     mutation(\n       $email : String!\n       $pass : String!\n     ){\n      createUser(\n        authProvider : {\n          email : {\n            email : $email\n            password : $pass\n          }\n        }\n        \n      ){\n        id\n      }\n    }\n   \n  `,\n  {\n    email : this.state.email,\n    pass : this.state.password\n  })\n }\n\n  render() {\n   return (\n      \n    <div className=\"authMain\">\n    Hi\n    </div>\n   \n   \n  );\n  }\n}\n\nexport default Reg;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\nimport HospitalDashboard from \"../views/HospitalDashboard/HospitalDashboard.jsx\";\nimport CP_Hospital from \"../components/CP_Hospital/CP_Hospital.jsx\";\nimport SearchReport from \"../views/SearchReport/SearchReport.jsx\";\nimport CP_User from \"../components/CP_User/CP_User.jsx\";\nimport UserReport from \"../views/UserReport/UserReport.jsx\";\nimport SearchReportDoc from \"../views/SearchReportDoc/SearchReportDoc.jsx\";\nimport Reg from \"../components/Reg/Reg.jsx\";\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/cp_hospital\",\n        name: \"CP_Hospital\",\n        component: CP_Hospital\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    {\n        path: \"/hospitaldashboard\",\n        name: \"HospitalDashboard\",\n        component: HospitalDashboard\n    },\n    {\n        path: \"/searchreport\",\n        name: \"SearchReport\",\n        component: SearchReport\n    },\n    {\n        path: \"/cp_user\",\n        name: \"CP_User\",\n        component: CP_User\n    },\n    {\n        path: \"/userreport\",\n        name: \"UserReport\",\n        component: UserReport\n    },\n    {\n        path: \"/searchreportdoc\",\n        name: \"SearchReportDoc\",\n        component: SearchReportDoc\n    },\n    {\n        path: \"/reg\",\n        name: \"Reg\",\n        component: Reg\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: true\n    },\n\n    tooltips: {\n      enabled: true\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n\n  data: canvas => {\n    return {\n      labels: [1, 2, 3, 4],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [40, 20, 30, 10]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: true\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: true\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}