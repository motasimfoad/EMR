{"version":3,"sources":["logo.svg","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CustomButton/CustomButton.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","views/Report/Report.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Prescription_Update/Prescription_Update.jsx","components/CR_Admin/CR_Admin.jsx","components/Update_User_Admin/Update_User_Admin.jsx","views/SearchReportAdmin/SearchReportAdmin.jsx","components/Footer/Footer.jsx","views/AdminSearch/AdminSearch.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","views/AdminSearchUser/AdminSearchUser.jsx","routes/dashboard.jsx","components/Header/Header.jsx","views/Auth/Auth.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","views/HospitalDashboard/HospitalDashboard.jsx","components/CP_Hospital/CP_Hospital.jsx","views/SearchReport/SearchReport.jsx","components/CP_User/CP_User.jsx","views/UserReport/UserReport.jsx","views/SearchReportDoc/SearchReportDoc.jsx","components/Reg/Reg.jsx","routes/index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","USER_COUNT","gql","_templateObject","REP_COUNT","_templateObject2","PRES_COUNT","_templateObject3","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","location","state","pathname","logInfoId","logInfo","logInfoToken","patient","doctor","pharmacy","hospital","admin","rep","pres","user","fever","typhoid","pneumonia","malaria","diarrhoea","diabetes","cancer","_this2","client","query","_templateObject4","then","result","setState","data","prescriptionCount","count","catch","error","console","log","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","userCount","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","reportCount","_templateObject18","_this3","preVsRep","canvas","labels","datasets","backgroundColor","options","scales","xAxes","stacked","yAxes","graph","label","gridLines","offsetGridLines","ticks","beginAtZero","maintainAspectRatio","dashboardEmailStatisticsChart","pointRadius","pointHoverRadius","borderWidth","legend","display","pieceLabel","render","fontColor","precision","tooltips","enabled","drawBorder","zeroLineColor","color","barPercentage","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_apollo_browser_umd","_ref","loading","concat","message","_ref2","_ref3","react_chartjs_2_es","height","CustomButton","_this$props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","assign","ListUser","UserPage_templateObject","react_loading_default","type","width","allUsers","map","id","createdAt","updatedAt","phone","nid","name","utype","email","style","top","src","alt","components_CustomButton_CustomButton","onClick","toggle","up","preDelete","isOpen","modal","viewPresciptionId","bordered","UserPage","bind","assertThisInitialized","delete","some","confirmAlert","title","buttons","alert","mutate","mutation","UserPage_templateObject2","variables","refetchQueries","UserPage_templateObject3","UserPage_ListUser","Prescription_templateObject","allPrescriptions","docname","details","owner","docid","chember","med","phn","Prescription","Prescription_templateObject2","Prescription_templateObject3","Prescription_ListUser","Report_templateObject","allReports","imageUrl","imageid","phoneid","href","target","Report","Report_templateObject2","Report_templateObject3","Report_ListUser","Prescription_Create","pname","drid","inputAddress","phnno","inputDetails","inputMed","handleChange","evt","defineProperty","value","Prescription_Create_templateObject","CreatePrescription","createPrescription","onSubmit","handleSubmit","for","placeholder","onChange","size","Prescription_Update","viewPresciption","Prescription_Update_templateObject","updatePrescription","CR_Admin","onDrop","files","FormData","append","fetch","method","body","response","json","image","imageId","url","back","submit","lo","window","reload","maxWidth","e","dist_es","accept","multiple","role","CR_Admin_templateObject","imageID","Update_User_Admin","Update_User_Admin_templateObject","updateUser","disabled","SearchReportAdmin","text","inputText","mode","handleSave","handleEdit","SearchReportAdmin_templateObject","SearchReportAdmin_templateObject2","searchText","SearchReportAdmin_templateObject3","_this4","required","expand","inline","withApollo","Footer","default","fluid","Date","getYear","AdminSearch","logOut","AdminSearch_templateObject","AdminSearch_templateObject2","AdminSearch_templateObject3","components_Footer_Footer","ps","AdminSearchUser","AdminSearchUser_templateObject","AdminSearchUser_templateObject2","AdminSearchUser_templateObject3","dashRoutes","path","component","Create_Prescription","Update_Prescription","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","innerWidth","addEventListener","updateColor","indexOf","ref","openSidebar","getBrand","navbar","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","to","activeClassName","handleActiveClick","handleBgClick","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","Client","GraphQLClient","headers","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","login","reg","tab","Auth_templateObject","password","signinUser","pass","request","tabs","classnames","active","tabId","Unauth","Search","Search_templateObject","Docdash","search","cp","sr","uname","CP_doc","CP_doc_templateObject","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","searchReport","UserPrescription_templateObject","UserPrescription","UserPrescription_ListUser","HospitalDashboard","CP_Hospital","hospitalId","hospitalName","CP_Hospital_templateObject","SearchReport","SearchReport_templateObject","CP_User","CP_User_templateObject","UserReport_templateObject","UserReport","UserReport_ListUser","SearchReportDoc","SearchReportDoc_templateObject","indexRoutes","Reg","d","__webpack_exports__","src_client","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","uri","ReactDOM","BrowserRouter","Router","getElementById"],"mappings":"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","file":"static/js/main.a3c2ecfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Doughnut, Pie,  Bar, Line } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\nimport {client} from \"../../index\";\n//import dashboardNASDAQChart from \"../../variables/charts\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst USER_COUNT = gql`\n {\n      userCount: _allUsersMeta {\n        count\n      }\n    }\n`;\n\nconst REP_COUNT = gql`\n {\n      reportCount: _allReportsMeta {\n        count\n      }\n    }\n`;\n\nconst PRES_COUNT = gql`\n {\n        prescriptionCount: _allPrescriptionsMeta {\n        count\n      }\n   }\n`;\n\nclass Dashboard extends React.Component  {\n   \n constructor(props) {\n    super(props);\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        //Counter\n        patient : '',\n        doctor : '',\n        pharmacy : '',\n        hospital : '',\n        admin : '',\n        rep : '',\n        pres : '',\n        user : '',\n        //Deseases\n        fever : '', \n        typhoid : '', \n        pneumonia : '', \n        malaria : '', \n        diarrhoea : '', \n        diabetes : '', \n        cancer : ''\n      }\n    }\n}\n\ncomponentDidMount() {\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"typhoid\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      typhoid: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"fever\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      fever: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"pneumonia\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      pneumonia: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"malaria\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      malaria: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"diarrhoea\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      diarrhoea: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"diabetes\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      diabetes: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n      {\n      prescriptionCount: _allPrescriptionsMeta(\n         filter : {\n          details_contains : \"cancer\"\n        }\n      ) {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      cancer: result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      user: result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Patient\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      patient: result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n   client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Doctor\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      doctor : result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Hospital\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      hospital : result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Pharmacy\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      pharmacy : result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Admin\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      admin : result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\nclient.query({\n    query: gql`\n      {\n      reportCount: _allReportsMeta {\n        count\n      }\n    }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      rep : result.data.reportCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n  client.query({\n    query: gql`\n       {\n        prescriptionCount: _allPrescriptionsMeta {\n        count\n      }\n   }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      pres : result.data.prescriptionCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n\n}\n\n  \n  render() {\n\n   const preVsRep = {\n      data: canvas => {\n        return {\n          labels: [\"Report\", \"Prescription\", \"User\"],\n          datasets: [\n            {\n              backgroundColor: [\"#2ecc71\", \"#ef8157\", \"#fcc468\"],\n              data: [this.state.rep, this.state.pres, this.state.user]\n            }\n          ],\n          options: {\n              scales: {\n                  xAxes: [{\n                      stacked: true,\n                  }],\n                  yAxes: [{\n                      stacked: true\n                  }]\n              }\n          }\n        };\n      },\n    };\n\n    const graph = {\n      data: canvas => {\n        return {\n          labels: [\"\",\"Fever\", \"Typhoid\", \"Pneumonia\" , \"Malaria\", \"Diarrhoea\", \"Diabetes\", \"Cancer\", \"\"],\n          datasets: [\n            { label: 'No of affected patients',\n              backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\", \"#2ecc71\", \"#badc58\", \"#e056fd\", \"#eb4d4b\"],\n              data: [0, this.state.fever, this.state.typhoid, this.state.pneumonia, this.state.malaria, this.state.diarrhoea, this.state.diabetes, this.state.cancer, 0]\n            }\n          ],\n          options: {\n            scales: {\n              xAxes: [{\n                stacked: false,\n                gridLines: {\n                  offsetGridLines: false\n              },\n              ticks: {\n                beginAtZero: false\n            },\n            maintainAspectRatio: false\n            }],\n              yAxes: [{\n                stacked: false,\n                  ticks: {\n                      beginAtZero: false\n                  },\n                  maintainAspectRatio: false\n              }]\n          }\n          }\n        };\n      },\n    };\n  \n    const dashboardEmailStatisticsChart = {\n      data: canvas => {\n        return {\n          labels: [\"Patient\", \"Doctor\", \"Hospital\", \"Pharmacy\", \"Admin\"],\n          datasets: [\n            {\n              label: \"Users Record (Role Based)\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\", \"#2ecc71\"],\n              borderWidth: 0,\n              data: [this.state.patient, this.state.doctor, this.state.hospital, this.state.pharmacy, this.state.admin]\n            }\n          ]\n        };\n      },\n      options: {\n        legend: {\n          display: true\n        },\n    \n        pieceLabel: {\n          render: \"percentage\",\n          fontColor: [\"white\"],\n          precision: 2\n        },\n    \n        tooltips: {\n          enabled: true\n        },\n    \n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                drawBorder: false,\n                zeroLineColor: \"transparent\",\n                color: \"rgba(255,255,255,0.05)\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(255,255,255,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                display: false\n              }\n            }\n          ]\n        }\n      }\n    };\n\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Allocated Server Capacity</p>\n                      <CardTitle tag=\"p\">500MB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Currently Updated\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-02 text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total User Registered</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={USER_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            data.userCount.count\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-credit-card text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Reports </p>\n                      <CardTitle tag=\"p\">\n                      <Query query={REP_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            data.reportCount.count\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-copy-04 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Prescriptions</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={PRES_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n                       \n\n                          return (\n                           data.prescriptionCount.count\n                           );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12}  md={6}>\n            <Card>\n              <CardHeader>\n                <CardTitle>User Statistics</CardTitle>\n                <p className=\"card-category\">Data showing from your last login</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                 \n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-gray\" /> Patient{\" \"}\n                  <i className=\"fa fa-circle text-primary\" /> Doctor{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Hospital{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Pharmacy{\" \"}\n                  <i className=\"fa fa-circle text-success\" /> Admin{\" \"}\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of users based on user type\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={6}>\n          <Card>\n              <CardHeader>\n                <CardTitle>Data Server Statistics</CardTitle>\n                <p className=\"card-category\">Data showing from your last login</p>\n              </CardHeader>\n              <CardBody>\n              <Doughnut\n                  data={preVsRep.data}\n                  options={preVsRep.options}\n                 \n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  \n                  <i className=\"fa fa-circle text-warning\" /> User{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Prescription{\" \"}\n                  <i className=\"fa fa-circle text-success\" /> Report{\" \"}\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of users, prescriptions, reports in our server\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n            </Col>\n         \n        </Row>\n        <Row>\n        <Col xs={12} md={12} sm={6}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Disease graph</CardTitle>\n                <p className=\"card-category\"> Data showing from your last login</p>\n              </CardHeader>\n              <CardBody>\n                <Bar data={graph.data}  options={graph.options}  height = {80}/>\n              </CardBody>\n              <CardFooter>\n              </CardFooter>\n            </Card>\n          </Col>\n          \n         </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n        return data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n    this.props.history.push({\n      pathname: '/uua',\n      state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Report extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          \n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicine</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicines for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          \n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicine</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\nclass CR_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneid: '',\n    };\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    window.location.reload()\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n          <div className=\"content\">\n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                <ModalHeader toggle={this.toggle}></ModalHeader>\n                <ModalBody className=\"crhosCenter\">\n                  <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n                  <br />\n                  <br />\n                <h3>Report Successfully Added</h3>\n                </ModalBody>\n                <ModalFooter>\n                \n                </ModalFooter>\n              </Modal>\n            <div className=\"cphelperMain\">\n                  <h2>Add Report for a Patient</h2>\n                  <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n                  Upload the image of your prescription.<br/>\n                  The submit button will automatically apper on your screen.\n                  </pre>\n                  <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n                    <Input\n                      className='cpHospitalInput'\n                      value={this.state.phoneid}\n                      placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n                      onChange={(e) => this.setState({phoneid: e.target.value})}\n                    />\n                    <br/>\n                    {!this.state.imageId &&\n                    <Dropzone\n                      className=\"dz\"\n                      onDrop={this.onDrop}\n                      accept='image/*'\n                      multiple={false}\n                    >\n                      <div><b>Drop an image or click to choose</b></div> \n                    </Dropzone>}\n                    {this.state.imageUrl &&\n                      <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n                    \n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"danger\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-remove \"/> &nbsp;Discard</Button>\n                    \n                    }\n                  </div>\n                </div>\n              </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CR_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Update_User_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.history.location.state.some[0],\n      createdAt: props.history.location.state.some[1],\n      updatedAt: props.history.location.state.some[2],\n      phone: props.history.location.state.some[3],\n      nid: props.history.location.state.some[4],\n      name: props.history.location.state.some[5],\n      utype: props.history.location.state.some[6],\n      email: props.history.location.state.some[7],\n      \n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updateUser(\n        $id : ID!,\n        $phone: String!,\n        $nid: String,\n        $name: String!,\n        $utype: String!,\n       \n       ){\n          updateUser(\n              id : $id,\n            phone : $phone,\n            nid  : $nid ,\n            name  : $name,\n            utype   : $utype,\n           \n          ){\n            id\n            name\n            email\n            phone\n           }\n        }\n      `}\n      variables = {{\n        id : this.state.id,\n        phone: this.state.phone,\n        nid: this.state.nid,\n        name: this.state.name,\n        utype: this.state.utype,\n       \n      }}\n  >\n    {(updateUser, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>User Info Updated Successfully!!</CardTitle>\n          <CardText>\n          User ID : <b>{data.updateUser.id}</b>< br />\n          Name : <b>{data.updateUser.name}</b>< br />\n          Email : <b>{data.updateUser.email}</b>< br />\n          Contact No : <b>{data.updateUser.phone}</b>< br />\n          </CardText>\n          \n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update User Information</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing user data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">User Name</Label>\n              <Input type=\"text\"  id=\"name\" placeholder={this.state.name} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">ID/ NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">User Id (System)</Label>\n              <Input type=\"text\"  id=\"id\" placeholder={this.state.id} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Created At</Label>\n              <Input type=\"text\"  id=\"createdAt\" placeholder={this.state.createdAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Updated At</Label>\n            <Input type=\"text\"  id=\"updatedAt\" placeholder={this.state.updatedAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">User contact no</Label>\n              <Input type=\"text\"  id=\"phone\" placeholder={this.state.phone} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">User Role</Label>\n            <Input type=\"text\"  id=\"utype\" placeholder={this.state.utype} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Email</Label>\n              <Input type=\"text\"  id=\"email\" placeholder={this.state.email} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updateUser()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Update_User_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\n\n\nclass SearchReportAdmin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n   }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n \n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        </Alert>\n      \n       </div>\n       \n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportAdmin);\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter2\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n           \n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearch);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearchUser extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n      await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\nup(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n \n  this.props.history.push({\n    pathname: '/uua',\n    state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n  })\n}\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allUsers($searchText: String!){\n      \n          allUsers\n          (\n            filter :{\n            OR: [\n              {\n                nid : $searchText\n              },\n              {\n                phone : $searchText\n              },\n              {\n                email : $searchText\n              }\n            ]\n          }\n          )\n          {\n            name\n            id\n            phone\n            nid\n            utype\n            createdAt\n            updatedAt\n            email\n          }\n\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allUsers);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for User <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id/ email\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        \n        </form>\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allUsers.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No User found corresponding to given id/nid/phone/passport/birthcirtificate/email.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>    \n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearchUser);\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Report from \"views/Report/Report.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\nimport CR_Admin from \"../components/CR_Admin/CR_Admin.jsx\";\nimport Update_User_Admin from \"components/Update_User_Admin/Update_User_Admin.jsx\";\nimport SearchReportAdmin from \"../views/SearchReportAdmin/SearchReportAdmin.jsx\";\nimport AdminSearch from \"../views/AdminSearch/AdminSearch.jsx\";\nimport AdminSearchUser from \"../views/AdminSearchUser/AdminSearchUser.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"List Prescription\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/sp_admin\",\n    name: \"Search Prescription\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearch\n  },\n  {\n    path: \"/list_users\",\n    name: \"List Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/s_u\",\n    name: \"Search User\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearchUser\n  },\n  {\n    path: \"/list_report\",\n    name: \"List Report\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: Report\n  },\n  {\n    path: \"/cr_admin\",\n    name: \"Add Report\",\n    icon: \"nc-icon nc-cloud-upload-94\",\n    component: CR_Admin\n  },\n  {\n    path: \"/sr_admin\",\n    name: \"Search Report\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: SearchReportAdmin\n  },\n  {\n    path: \"/auth\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  {\n    path: \"/uua\",\n    component: Update_User_Admin\n  },\n  \n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  \n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst Client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n\n }\n});\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    \n    this.reg = this.reg.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Hospital\") {\n        this.props.history.push({\n          pathname: '/hospitaldashboard',\n          state: { logInfo: [result.data.signinUser.token, \n            result.data.signinUser.user.id,\n            result.data.signinUser.user.phone,\n            result.data.signinUser.user.nid,\n          result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n       else if(result.data.signinUser.user.utype === \"Admin\") {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n\n\nreg() {\n  const email = this.state.regEmail\n  const pass = this.state.regPass \n  const nid = this.state.regId\n  const phone = this.state.regPhn\n  const utype = this.state.regType\n  const name = this.state.regName\n\n  return Client.request(`\n   mutation(\n     $email : String!\n     $pass : String!\n     $nid : String\n     $phone : String\n     $utype : String\n     $name : String\n   ){\n    createUser(\n      authProvider : {\n        email : {\n          email : $email\n          password : $pass\n        }\n      }\n      nid : $nid\n      phone : $phone\n      utype : $utype \n      name : $name\n    ){\n      id\n    }\n  }\n \n`,\n      {\n        email,\n        pass ,\n        nid,\n        phone,\n        utype,\n        name\n      })\n      .then(result => { \n        alert(\"User registered successfully\")\n        \n\n      })\n      .catch(error => { alert(\"Email Id is already registered\") })\n      }\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\"><b>IMDRMS</b></span></h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Please Select</option>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        </form>\n      <Button type=\"submit\" color=\"primary\" onClick={this.reg}>Register</Button>\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport { \n  Button\n } from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n     this.back = this.back.bind(this);\n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" alt=\"Unauthoized\"/>\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n          <Navbar expand=\"lg\" color=\"dark\">\n          <Form inline className=\"ml-auto\">\n          <FormGroup >\n            <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n          </FormGroup>\n          <Button  color=\"neutral\" icon round onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n          </Form>\n          </Navbar>\n          <div>\n          <Row>\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n          <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n            <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n              <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription</CardTitle>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>Search Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.sr} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicine</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicines for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n   }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    \n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n            nid: this.props.history.location.state.some[10],\n            docname: this.props.history.location.state.some[1],\n            drid: this.props.history.location.state.some[5],\n            inputAddress: this.props.history.location.state.some[6],\n            phnno: this.props.history.location.state.some[9],\n            inputDetails: this.props.history.location.state.some[2],\n            inputMed: this.props.history.location.state.some[7],\n            viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n            logInfoToken : this.props.history.location.state.logInfo[0],\n            currentdocname : this.props.history.location.state.logInfo[2]\n        }\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n          if (loading) return <div>\n          <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n          </div>;\n          if (data) return  <div className=\"successCreateNoify\">\n            <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n              <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n              <CardTitle>Prescription Updated Successfully!!</CardTitle>\n              <CardText>\n              Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n              Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n              Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n              Health Issues : <b>{data.updatePrescription.details}</b>< br />\n              Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n              </CardText>\n              <Button onClick={this.back}>Back</Button>\n            </Card>\n          </div> ;\n          if (error) return <p>Error :(</p>;\n          \n            \n          return  <Row>\n          <Col md={12}>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Update Prescription</h5>\n                <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n            </CardHeader>\n              <CardBody>\n              <form onSubmit={this.handleSubmit}>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"pname\">Patient Name</Label>\n                  <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n                  <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"docname\">Doctors Name</Label>\n                  <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"drid\">Doctors ID</Label>\n                  <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                <Label for=\"inputAddress\">Chember Address</Label>\n                <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"phnno\">Patient contact no</Label>\n                  <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"inputDetails\">Details</Label>\n                <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n              </FormGroup>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-12\">\n                  <Label for=\"inputMed\">Medicine</Label>\n                  <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n                </FormGroup>\n              \n              </div>\n              \n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n            </form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>;\n                }}\n            </Mutation>\n\n        </div>\n        );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.searchReport = this.searchReport.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n     }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_user',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  \n search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  searchReport() {\n    this.props.history.push({\n      pathname: '/userreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n          <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top className=\"btnImgCrd\" src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription / Report</CardTitle>\n                  <pre>You will find this files under view report section</pre>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>View Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.searchReport} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass HospitalDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n        }\n      }\n   }\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_hospital',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/search',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img style={{width : 300}} src =\"https://images.vexels.com/media/users/3/144223/isolated/preview/f1d0807f8ffad0197757d840bdc97d0b--cone-do-registro-m-dico-by-vexels.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Add Report</CardTitle>\n                <Button onClick={this.cp} color=\"primary\">Add</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>View Prescription/Report</CardTitle>\n                <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                <Button onClick={this.sr} color=\"primary\">Report</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Log Out</CardTitle>\n                <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n            </CardBody>\n          </Card>\n          </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default HospitalDashboard;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_Hospital extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/hospitaldashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add report for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n            <ModalHeader toggle={this.toggle}></ModalHeader>\n            <ModalBody className=\"crhosCenter\">\n              <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n              <br />\n              <br />\n            <h3>Report Successfully Added</h3>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"info\" onClick={this.back}>Back</Button>\n              <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_Hospital;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n        <Navbar expand=\"lg\" color=\"dark\">\n        <Form inline className=\"ml-auto\">\n        <FormGroup >\n          <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n        </FormGroup>\n        <Button  color=\"neutral\" icon round onClick={this.display}>\n        <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n        </Form>\n        </Navbar>\n        <div>\n        <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReport);\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader,\n  ModalBody, \n  ModalFooter,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription / Report</h2>\n        <pre className=\"cpHospitalText\">Enter your NID/Birth Cirtificate no/ Passport No/ Phone No associated with <b>this account</b>. <br/>\n        Upload the image of your prescription/report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n    </div>\n  < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allReports($phn: String, $nid: String){\n      \n      allReports(\n        filter : {\n          OR : [{\n            phoneid : $phn\n          }, {\n            phoneid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        imageid\n        imageUrl\n        phoneid\n        createdAt\n        updatedAt\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n         \n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReportDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportDoc);\n","import React from \"react\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n}\n});\n\nclass Reg extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       email: \"rid@wan2.com\",\n       password : \"llalal\"\n      \n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.reg = this.reg.bind(this);\n    }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  reg() {\n    return client.request(`\n     mutation(\n       $email : String!\n       $pass : String!\n     ){\n      createUser(\n        authProvider : {\n          email : {\n            email : $email\n            password : $pass\n          }\n        }\n        \n      ){\n        id\n      }\n    }\n   \n  `,\n  {\n    email : this.state.email,\n    pass : this.state.password\n  })\n }\n\n  render() {\n   return (\n      \n    <div className=\"authMain\">\n    Hi\n    </div>\n   \n   \n  );\n  }\n}\n\nexport default Reg;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\nimport HospitalDashboard from \"../views/HospitalDashboard/HospitalDashboard.jsx\";\nimport CP_Hospital from \"../components/CP_Hospital/CP_Hospital.jsx\";\nimport SearchReport from \"../views/SearchReport/SearchReport.jsx\";\nimport CP_User from \"../components/CP_User/CP_User.jsx\";\nimport UserReport from \"../views/UserReport/UserReport.jsx\";\nimport SearchReportDoc from \"../views/SearchReportDoc/SearchReportDoc.jsx\";\nimport Reg from \"../components/Reg/Reg.jsx\";\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/cp_hospital\",\n        name: \"CP_Hospital\",\n        component: CP_Hospital\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    {\n        path: \"/hospitaldashboard\",\n        name: \"HospitalDashboard\",\n        component: HospitalDashboard\n    },\n    {\n        path: \"/searchreport\",\n        name: \"SearchReport\",\n        component: SearchReport\n    },\n    {\n        path: \"/cp_user\",\n        name: \"CP_User\",\n        component: CP_User\n    },\n    {\n        path: \"/userreport\",\n        name: \"UserReport\",\n        component: UserReport\n    },\n    {\n        path: \"/searchreportdoc\",\n        name: \"SearchReportDoc\",\n        component: SearchReportDoc\n    },\n    {\n        path: \"/reg\",\n        name: \"Reg\",\n        component: Reg\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}