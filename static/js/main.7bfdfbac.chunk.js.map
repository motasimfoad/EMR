{"version":3,"sources":["assets/img/damir-bosnjak.jpg","assets/img/mike.jpg","assets/img/faces/ayo-ogunseinde-2.jpg","assets/img/faces/joe-gardner-2.jpg","assets/img/faces/clem-onojeghuo-2.jpg","logo.svg","variables/charts.jsx","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CardElements/CardAuthor.jsx","components/FormInputs/FormInputs.jsx","components/CustomButton/CustomButton.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","routes/dashboard.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","routes/index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","dashboard24HoursPerformanceChart","data","canvas","labels","datasets","borderColor","backgroundColor","pointRadius","pointHoverRadius","borderWidth","options","legend","display","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","padding","dashboardEmailStatisticsChart","label","pieceLabel","render","precision","dashboardNASDAQChart","fill","pointBorderColor","pointBorderWidth","position","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","Dashboard","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_chartjs_2_es","width","height","CardAuthor","href","link","src","avatar","alt","avatarAlt","title","description","FieldGroup","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","focus","_this2","_this$props","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","assign","onFocus","e","setState","onBlur","type","FormInputs","_Component","apply","arguments","inherits","createClass","value","row","ncols","FormInputs_FieldGroup","proprieties","CustomButton","simple","round","icon","neutral","leftLabel","rightLabel","wd","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","User","damirBosnjak","CardElements_CardAuthor","mike","ayoOgunseinde2","components_CustomButton_CustomButton","size","outline","joeGardner2","clemOnojeghuo2","components_FormInputs_FormInputs","disabled","defaultValue","placeholder","ListUser","react_apollo_browser_umd","query","gql","_templateObject","_ref","loading","error","react_loading_default","allPrescriptions","map","_ref2","id","docname","details","createdAt","owner","docid","chember","med","updatedAt","phn","style","top","onClick","toggle","delete","isOpen","modal","viewPresciptionId","bordered","Prescription","bind","assertThisInitialized","client","mutate","mutation","_templateObject2","variables","refetchQueries","_templateObject3","obj","console","log","expand","inline","Prescription_ListUser","ps","dashRoutes","path","name","component","Prescription_Create","pname","nid","drid","inputAddress","phnno","inputDetails","inputMed","handleChange","evt","defineProperty","target","Prescription_Create_templateObject","CreatePrescription","createPrescription","onSubmit","handleSubmit","for","onChange","UserPage","pro","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","location","pathname","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","addEventListener","updateColor","history","indexOf","_this3","fluid","ref","openSidebar","getBrand","navbar","Footer","default","Date","getYear","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","NavLink","to","activeClassName","indexRoutes","handleActiveClick","handleBgClick","mainPanel","body","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","d","__webpack_exports__","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","HttpLink","uri","ReactDOM","Router","getElementById"],"mappings":"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","file":"static/js/main.7bfdfbac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mike.aab414f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ayo-ogunseinde-2.bfc688ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/joe-gardner-2.76ff47ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clem-onojeghuo-2.bb4b9ac9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CardAuthor extends React.Component {\n  render() {\n    return (\n      <div className=\"author\">\n        <a href={this.props.link ? this.props.link : \"#\"}>\n          <img\n            className=\"avatar border-gray\"\n            src={this.props.avatar}\n            alt={this.props.avatarAlt}\n          />\n          <h5 className=\"title\">{this.props.title}</h5>\n        </a>\n        <p className=\"description\">{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nCardAuthor.propTypes = {\n  // Where the user to be redirected on clicking the avatar\n  link: PropTypes.string,\n  avatar: PropTypes.string,\n  avatarAlt: PropTypes.string,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n};\n\nexport default CardAuthor;\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardTitle, CardFooter, Row, Col } from \"reactstrap\";\n\nimport CardAuthor from \"components/CardElements/CardAuthor.jsx\";\nimport FormInputs from \"components/FormInputs/FormInputs.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\n\nimport damirBosnjak from \"assets/img/damir-bosnjak.jpg\";\nimport mike from \"assets/img/mike.jpg\";\nimport ayoOgunseinde2 from \"assets/img/faces/ayo-ogunseinde-2.jpg\";\nimport joeGardner2 from \"assets/img/faces/joe-gardner-2.jpg\";\nimport clemOnojeghuo2 from \"assets/img/faces/clem-onojeghuo-2.jpg\";\n\nclass User extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col md={4} xs={12}>\n            <Card className=\"card-user\">\n              <div className=\"image\">\n                <img src={damirBosnjak} alt=\"...\" />\n              </div>\n              <CardBody>\n                <CardAuthor\n                  avatar={mike}\n                  avatarAlt=\"...\"\n                  title=\"Chet Faker\"\n                  description=\"@chetfaker\"\n                />\n                <p className=\"description text-center\">\n                  \"I like the way you work it{\" \"}<br/>\n                    No diggity <br/>\n                    I wanna bag it up\"\n                </p>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <div className=\"button-container\">\n                  <Row>\n                    <Col xs={6} sm={6} md={6} lg={3} className=\"ml-auto\">\n                      <h5>\n                        12\n                        <br/>\n                        <small>Files</small>\n                      </h5>\n                    </Col>\n                    <Col xs={6} sm={6} md={6} lg={4} className=\"mr-auto ml-auto\">\n                      <h5>\n                        2GB\n                        <br/>\n                        <small>Used</small>\n                      </h5>\n                    </Col>\n                    <Col lg={3} className=\"mr-auto\">\n                      <h5>\n                        24,6$\n                        <br/>\n                        <small>Spent</small>\n                      </h5>\n                    </Col>\n                  </Row>\n                </div>\n              </CardFooter>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Team Members</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <ul className=\"list-unstyled team-members\">\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={ayoOgunseinde2} alt=\"ayoOgunseinde2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        DJ Khaled\n                        <br />\n                        <span className=\"text-muted\">\n                          <small>\n                          Offline\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={joeGardner2} alt=\"joeGardner2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Creative Tim\n                        <br />\n                        <span className=\"text-success\">\n                          <small>\n                          Available\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                  <li>\n                    <Row>\n                      <Col xs={2} md={2}>\n                        <div className=\"avatar\">\n                          <img src={clemOnojeghuo2} alt=\"clemOnojeghuo2\" className=\"img-circle img-no-padding img-responsive\" />\n                        </div>\n                      </Col>\n                      <Col xs={7} md={7}>\n                        Flume\n                        <br />\n                        <span className=\"text-danger\">\n                          <small>\n                          Busy\n                        </small>\n                        </span>\n                      </Col>\n                      <Col xs={3} md={3} className=\"text-right\">\n                        <Button size=\"sm\" color=\"success\" round icon outline>\n                          <i className=\"fa fa-envelope\"></i>\n                        </Button>\n                      </Col>\n                    </Row>\n                  </li>\n                </ul>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md={8} xs={12}>\n            <Card className=\"card-user\">\n              <CardHeader>\n                <CardTitle>Edit Profile</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <form>\n                  <FormInputs\n                    ncols={[\"col-md-5 pr-1\", \"col-md-3 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"Company (disabled)\",\n                        inputProps: {\n                          type: \"text\",\n                          disabled: true,\n                          defaultValue: \"Creative Code Inc.\"\n                        }\n                      },\n                      {\n                        label: \"Username\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"chetfaker\"\n                        }\n                      },\n                      {\n                        label: \"Email address\",\n                        inputProps: {\n                          type: \"email\",\n                          placeholder: \"Email\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-6 pr-1\", \"col-md-6 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"First Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"First Name\",\n                          defaultValue: \"Chet\"\n                        }\n                      },\n                      {\n                        label: \"Last Name\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Last Name\",\n                          defaultValue: \"Faker\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"Address\",\n                        inputProps: {\n                          type: \"text\",\n                          placeholder: \"Home Address\",\n                          defaultValue:\n                            \"Melbourne, Australia\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-4 pr-1\", \"col-md-4 px-1\", \"col-md-4 pl-1\"]}\n                    proprieties={[\n                      {\n                        label: \"City\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Melbourne\",\n                          placeholder: \"City\"\n                        }\n                      },\n                      {\n                        label: \"Country\",\n                        inputProps: {\n                          type: \"text\",\n                          defaultValue: \"Australia\",\n                          placeholder: \"Country\"\n                        }\n                      },\n                      {\n                        label: \"Postal Code\",\n                        inputProps: {\n                          type: \"number\",\n                          placeholder: \"ZIP Code\"\n                        }\n                      }\n                    ]}\n                  />\n                  <FormInputs\n                    ncols={[\"col-md-12\"]}\n                    proprieties={[\n                      {\n                        label: \"About Me\",\n                        inputProps: {\n                          type: \"textarea\",\n                          defaultValue:\n                            \"Oh so, your weak rhyme You doubt I'll bother, reading into it\",\n                          placeholder: \"Here can be your description\"\n                        }\n                      }\n                    ]}\n                  />\n                  <Row>\n                    <div className=\"update ml-auto mr-auto\">\n                      <Button color=\"primary\" round>Update Profile</Button>\n                    </div>\n                  </Row>\n                </form>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\">Update</Button>\n            <Button color=\"danger\" onClick={() => {props.delete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.delete = this.delete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  async delete(viewPresciptionId){\n    const obj = await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n\n  \n\n  console.log(obj.data);\n  \n}\n\n//   Delete = () => (\n//   <Mutation\n//   mutation={gql`\n//   mutation deletePrescription(\n//     $id: String!,\n//    ){\n//       deletePrescription(\n//         id: $id,\n//       ){\n//         owner\n//       }\n//     }\n//   `}\n//   variables = {{\n//     id: this.state.viewPresciptionId,\n//   }}\n// >\n// {({data, loading, error}) => {\n//   if (loading) return <div>\n//   <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n//   </div>;\n//   if (data) return  <div className=\"successCreateNoify\">\n//     <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n//       <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n//       <CardTitle>Prescription Created Successfully!!</CardTitle>\n//       <CardText>\n//       Prescription ID : <b>{data.deletePrescription.owner}</b>< br />\n//       </CardText>\n//       <Button href=\"/cp\">Back</Button>\n//     </Card>\n//    </div> ;\n//   if (error) return <p>Error :(</p>;\n//   return  <div>\n//     Alhamdulillah\n//   </div>;\n//         }}\n//     </Mutation>\n\n// );\n\n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup className={\"no-border\"}>\n        <Input type=\"text\" placeholder=\"Search\"/>\n      </FormGroup>\n      <Button color=\"neutral\" icon round>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/user-page\",\n    name: \"User Profile\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    pro: true,\n    path: \"/\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  { redirect: true, path: \"/\", pathTo: \"/dashboard\", name: \"Dashboard\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\n\nvar indexRoutes = [{ path: \"/\", name: \"Home\", component: Dashboard }];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\n\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  link: new HttpLink(),\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <Router history={hist}>\n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />;\n      })}\n      \n    </Switch>\n  </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}