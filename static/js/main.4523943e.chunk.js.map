{"version":3,"sources":["logo.svg","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CustomButton/CustomButton.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","views/Report/Report.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Prescription_Update/Prescription_Update.jsx","components/CR_Admin/CR_Admin.jsx","components/Update_User_Admin/Update_User_Admin.jsx","views/SearchReportAdmin/SearchReportAdmin.jsx","components/Footer/Footer.jsx","views/AdminSearch/AdminSearch.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","views/AdminSearchUser/AdminSearchUser.jsx","routes/dashboard.jsx","components/Header/Header.jsx","views/Auth/Auth.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","views/HospitalDashboard/HospitalDashboard.jsx","components/CP_Hospital/CP_Hospital.jsx","views/SearchReport/SearchReport.jsx","components/CP_User/CP_User.jsx","views/UserReport/UserReport.jsx","views/SearchReportDoc/SearchReportDoc.jsx","components/Reg/Reg.jsx","routes/index.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","location","state","pathname","logInfoId","logInfo","logInfoToken","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_chartjs_2_es","data","dashboard24HoursPerformanceChart","options","width","height","dashboardEmailStatisticsChart","dashboardNASDAQChart","CustomButton","_this$props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","assign","ListUser","react_apollo_browser_umd","query","gql","_templateObject","_ref","loading","error","react_loading_default","type","color","allUsers","map","_ref2","id","createdAt","updatedAt","phone","nid","name","utype","email","style","top","src","alt","components_CustomButton_CustomButton","onClick","toggle","up","preDelete","isOpen","modal","viewPresciptionId","bordered","UserPage","bind","assertThisInitialized","delete","setState","some","_this2","confirmAlert","title","buttons","label","alert","client","mutate","mutation","_templateObject2","variables","refetchQueries","_templateObject3","UserPage_ListUser","Prescription_templateObject","allPrescriptions","docname","details","owner","docid","chember","med","phn","Prescription","Prescription_templateObject2","Prescription_templateObject3","Prescription_ListUser","Report_templateObject","allReports","imageUrl","imageid","phoneid","href","target","Report","Report_templateObject2","Report_templateObject3","Report_ListUser","Prescription_Create","pname","drid","inputAddress","phnno","inputDetails","inputMed","handleChange","evt","defineProperty","value","Prescription_Create_templateObject","CreatePrescription","createPrescription","onSubmit","handleSubmit","for","placeholder","onChange","size","Prescription_Update","viewPresciption","Prescription_Update_templateObject","updatePrescription","CR_Admin","onDrop","files","FormData","append","fetch","method","body","then","response","json","image","imageId","url","back","submit","lo","window","reload","maxWidth","e","dist_es","accept","multiple","role","CR_Admin_templateObject","imageID","result","_this3","catch","console","log","Update_User_Admin","Update_User_Admin_templateObject","updateUser","disabled","SearchReportAdmin","text","inputText","mode","handleSave","handleEdit","display","SearchReportAdmin_templateObject","SearchReportAdmin_templateObject2","searchText","SearchReportAdmin_templateObject3","_this4","required","expand","inline","withApollo","Footer","default","fluid","Date","getYear","AdminSearch","logOut","AdminSearch_templateObject","AdminSearch_templateObject2","AdminSearch_templateObject3","components_Footer_Footer","ps","AdminSearchUser","AdminSearchUser_templateObject","AdminSearchUser_templateObject2","AdminSearchUser_templateObject3","dashRoutes","path","component","Create_Prescription","Update_Prescription","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","innerWidth","addEventListener","updateColor","indexOf","ref","openSidebar","getBrand","navbar","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","to","activeClassName","handleActiveClick","handleBgClick","backgroundColor","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","Client","GraphQLClient","headers","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","login","reg","tab","Auth_templateObject","password","signinUser","user","pass","request","tabs","classnames","active","tabId","Unauth","Search","Search_templateObject","Docdash","search","cp","sr","uname","CP_doc","CP_doc_templateObject","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","searchReport","UserPrescription_templateObject","UserPrescription","UserPrescription_ListUser","HospitalDashboard","CP_Hospital","hospitalId","hospitalName","CP_Hospital_templateObject","SearchReport","SearchReport_templateObject","CP_User","CP_User_templateObject","UserReport_templateObject","UserReport","UserReport_ListUser","SearchReportDoc","SearchReportDoc_templateObject","indexRoutes","Reg","d","__webpack_exports__","src_client","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","uri","ReactDOM","render","BrowserRouter","Router","getElementById","canvas","labels","datasets","borderColor","pointRadius","pointHoverRadius","borderWidth","legend","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","xAxes","barPercentage","padding","pieceLabel","precision","fill","pointBorderColor","pointBorderWidth","position"],"mappings":"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","file":"static/js/main.4523943e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\nclass Dashboard extends React.Component  {\n   \n \n\n  constructor(props) {\n    super(props);\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n      }\n    }\n}\n  \n  render() {\n  \n    \n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n        return data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n    this.props.history.push({\n      pathname: '/uua',\n      state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Report extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/prescription\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\nclass CR_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneid: '',\n    };\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    window.location.reload()\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n          <div className=\"content\">\n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                <ModalHeader toggle={this.toggle}></ModalHeader>\n                <ModalBody className=\"crhosCenter\">\n                  <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n                  <br />\n                  <br />\n                <h3>Report Successfully Added</h3>\n                </ModalBody>\n                <ModalFooter>\n                \n                </ModalFooter>\n              </Modal>\n            <div className=\"cphelperMain\">\n                  <h2>Add Report for a Patient</h2>\n                  <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n                  Upload the image of your prescription.<br/>\n                  The submit button will automatically apper on your screen.\n                  </pre>\n                  <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n                    <Input\n                      className='cpHospitalInput'\n                      value={this.state.phoneid}\n                      placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n                      onChange={(e) => this.setState({phoneid: e.target.value})}\n                    />\n                    <br/>\n                    {!this.state.imageId &&\n                    <Dropzone\n                      className=\"dz\"\n                      onDrop={this.onDrop}\n                      accept='image/*'\n                      multiple={false}\n                    >\n                      <div><b>Drop an image or click to choose</b></div> \n                    </Dropzone>}\n                    {this.state.imageUrl &&\n                      <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n                    \n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"danger\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-remove \"/> &nbsp;Discard</Button>\n                    \n                    }\n                  </div>\n                </div>\n              </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CR_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Update_User_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.history.location.state.some[0],\n      createdAt: props.history.location.state.some[1],\n      updatedAt: props.history.location.state.some[2],\n      phone: props.history.location.state.some[3],\n      nid: props.history.location.state.some[4],\n      name: props.history.location.state.some[5],\n      utype: props.history.location.state.some[6],\n      email: props.history.location.state.some[7],\n      \n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updateUser(\n        $id : ID!,\n        $phone: String!,\n        $nid: String,\n        $name: String!,\n        $utype: String!,\n       \n       ){\n          updateUser(\n              id : $id,\n            phone : $phone,\n            nid  : $nid ,\n            name  : $name,\n            utype   : $utype,\n           \n          ){\n            id\n            name\n            email\n            phone\n           }\n        }\n      `}\n      variables = {{\n        id : this.state.id,\n        phone: this.state.phone,\n        nid: this.state.nid,\n        name: this.state.name,\n        utype: this.state.utype,\n       \n      }}\n  >\n    {(updateUser, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>User Info Updated Successfully!!</CardTitle>\n          <CardText>\n          User ID : <b>{data.updateUser.id}</b>< br />\n          Name : <b>{data.updateUser.name}</b>< br />\n          Email : <b>{data.updateUser.email}</b>< br />\n          Contact No : <b>{data.updateUser.phone}</b>< br />\n          </CardText>\n          <Button href=\"/list_users\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">User Name</Label>\n              <Input type=\"text\"  id=\"name\" placeholder={this.state.name} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">ID/ NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">User Id (System)</Label>\n              <Input type=\"text\"  id=\"id\" placeholder={this.state.id} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Created At</Label>\n              <Input type=\"text\"  id=\"createdAt\" placeholder={this.state.createdAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Updated At</Label>\n            <Input type=\"text\"  id=\"updatedAt\" placeholder={this.state.updatedAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">User contact no</Label>\n              <Input type=\"text\"  id=\"phone\" placeholder={this.state.phone} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">User Role</Label>\n            <Input type=\"text\"  id=\"utype\" placeholder={this.state.utype} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Email</Label>\n              <Input type=\"text\"  id=\"email\" placeholder={this.state.email} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updateUser()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Update_User_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\n\n\nclass SearchReportAdmin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n   }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n \n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        </Alert>\n      \n       </div>\n       \n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportAdmin);\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n           \n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearch);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearchUser extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n      await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\nup(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n \n  this.props.history.push({\n    pathname: '/uua',\n    state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n  })\n}\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allUsers($searchText: String!){\n      \n          allUsers\n          (\n            filter :{\n            OR: [\n              {\n                nid : $searchText\n              },\n              {\n                phone : $searchText\n              },\n              {\n                email : $searchText\n              }\n            ]\n          }\n          )\n          {\n            name\n            id\n            phone\n            nid\n            utype\n            createdAt\n            updatedAt\n            email\n          }\n\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allUsers);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for User <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id/ email\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        \n        </form>\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allUsers.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No User found corresponding to given id/nid/phone/passport/birthcirtificate/email.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>    \n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearchUser);\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Report from \"views/Report/Report.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\nimport CR_Admin from \"../components/CR_Admin/CR_Admin.jsx\";\nimport Update_User_Admin from \"components/Update_User_Admin/Update_User_Admin.jsx\";\nimport SearchReportAdmin from \"../views/SearchReportAdmin/SearchReportAdmin.jsx\";\nimport AdminSearch from \"../views/AdminSearch/AdminSearch.jsx\";\nimport AdminSearchUser from \"../views/AdminSearchUser/AdminSearchUser.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"List Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/sp_admin\",\n    name: \"Search Prescription\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearch\n  },\n  {\n    path: \"/list_users\",\n    name: \"List Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/s_u\",\n    name: \"Search User\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearchUser\n  },\n  {\n    path: \"/list_report\",\n    name: \"List Report\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: Report\n  },\n  {\n    path: \"/cr_admin\",\n    name: \"Add Report\",\n    icon: \"nc-icon nc-cloud-upload-94\",\n    component: CR_Admin\n  },\n  {\n    path: \"/sr_admin\",\n    name: \"Search Report\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: SearchReportAdmin\n  },\n  {\n    path: \"/auth\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  {\n    path: \"/uua\",\n    component: Update_User_Admin\n  },\n  \n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  \n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst Client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n\n }\n});\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    \n    this.reg = this.reg.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Hospital\") {\n        this.props.history.push({\n          pathname: '/hospitaldashboard',\n          state: { logInfo: [result.data.signinUser.token, \n            result.data.signinUser.user.id,\n            result.data.signinUser.user.phone,\n            result.data.signinUser.user.nid,\n          result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n       else if(result.data.signinUser.user.utype === \"Admin\") {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n\n\nreg() {\n  const email = this.state.regEmail\n  const pass = this.state.regPass \n  const nid = this.state.regId\n  const phone = this.state.regPhn\n  const utype = this.state.regType\n  const name = this.state.regName\n\n  return Client.request(`\n   mutation(\n     $email : String!\n     $pass : String!\n     $nid : String\n     $phone : String\n     $utype : String\n     $name : String\n   ){\n    createUser(\n      authProvider : {\n        email : {\n          email : $email\n          password : $pass\n        }\n      }\n      nid : $nid\n      phone : $phone\n      utype : $utype \n      name : $name\n    ){\n      id\n    }\n  }\n \n`,\n{\n  email,\n  pass ,\n  nid,\n  phone,\n  utype,\n  name\n})\n.then(result => { \n  alert(\"User registered successfully\")\n  \n\n})\n.catch(error => { alert(\"Email Id is already registered\") })\n}\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\">CVIS</span><b> EMR</b> </h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Please Select</option>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        </form>\n      <Button type=\"submit\" color=\"primary\" onClick={this.reg}>Register</Button>\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport { \n  Button\n } from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n     this.back = this.back.bind(this);\n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" alt=\"Unauthoized\"/>\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n          <Navbar expand=\"lg\" color=\"dark\">\n          <Form inline className=\"ml-auto\">\n          <FormGroup >\n            <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n          </FormGroup>\n          <Button  color=\"neutral\" icon round onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n          </Form>\n          </Navbar>\n          <div>\n          <Row>\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n          <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n            <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n              <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription</CardTitle>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>Search Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.sr} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n   }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    \n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n            nid: this.props.history.location.state.some[10],\n            docname: this.props.history.location.state.some[1],\n            drid: this.props.history.location.state.some[5],\n            inputAddress: this.props.history.location.state.some[6],\n            phnno: this.props.history.location.state.some[9],\n            inputDetails: this.props.history.location.state.some[2],\n            inputMed: this.props.history.location.state.some[7],\n            viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n            logInfoToken : this.props.history.location.state.logInfo[0],\n            currentdocname : this.props.history.location.state.logInfo[2]\n        }\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n          if (loading) return <div>\n          <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n          </div>;\n          if (data) return  <div className=\"successCreateNoify\">\n            <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n              <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n              <CardTitle>Prescription Updated Successfully!!</CardTitle>\n              <CardText>\n              Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n              Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n              Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n              Health Issues : <b>{data.updatePrescription.details}</b>< br />\n              Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n              </CardText>\n              <Button onClick={this.back}>Back</Button>\n            </Card>\n          </div> ;\n          if (error) return <p>Error :(</p>;\n          \n            \n          return  <Row>\n          <Col md={12}>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Update Prescription</h5>\n                <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n            </CardHeader>\n              <CardBody>\n              <form onSubmit={this.handleSubmit}>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"pname\">Patient Name</Label>\n                  <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n                  <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"docname\">Doctors Name</Label>\n                  <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"drid\">Doctors ID</Label>\n                  <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                <Label for=\"inputAddress\">Chember Address</Label>\n                <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"phnno\">Patient contact no</Label>\n                  <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"inputDetails\">Details</Label>\n                <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n              </FormGroup>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-12\">\n                  <Label for=\"inputMed\">Medicin</Label>\n                  <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n                </FormGroup>\n              \n              </div>\n              \n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n            </form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>;\n                }}\n            </Mutation>\n\n        </div>\n        );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.searchReport = this.searchReport.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n     }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_user',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  \n search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  searchReport() {\n    this.props.history.push({\n      pathname: '/userreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n          <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription / Report</CardTitle>\n                  <pre>You will find this files under view report section</pre>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>View Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.searchReport} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass HospitalDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n        }\n      }\n   }\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_hospital',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/search',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img style={{width : 300}} src =\"https://images.vexels.com/media/users/3/144223/isolated/preview/f1d0807f8ffad0197757d840bdc97d0b--cone-do-registro-m-dico-by-vexels.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Add Report</CardTitle>\n                <Button onClick={this.cp} color=\"primary\">Add</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>View Prescription/Report</CardTitle>\n                <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                <Button onClick={this.sr} color=\"primary\">Report</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Log Out</CardTitle>\n                <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n            </CardBody>\n          </Card>\n          </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default HospitalDashboard;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_Hospital extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/hospitaldashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your prescription.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n            <ModalHeader toggle={this.toggle}></ModalHeader>\n            <ModalBody className=\"crhosCenter\">\n              <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n              <br />\n              <br />\n            <h3>Report Successfully Added</h3>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"info\" onClick={this.back}>Back</Button>\n              <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_Hospital;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n        <Navbar expand=\"lg\" color=\"dark\">\n        <Form inline className=\"ml-auto\">\n        <FormGroup >\n          <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n        </FormGroup>\n        <Button  color=\"neutral\" icon round onClick={this.display}>\n        <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n        </Form>\n        </Navbar>\n        <div>\n        <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReport);\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader,\n  ModalBody, \n  ModalFooter,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription / Report</h2>\n        <pre className=\"cpHospitalText\">Enter your NID/Birth Cirtificate no/ Passport No/ Phone No associated with <b>this account</b>. <br/>\n        Upload the image of your prescription/report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n    </div>\n  < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allReports($phn: String, $nid: String){\n      \n      allReports(\n        filter : {\n          OR : [{\n            phoneid : $phn\n          }, {\n            phoneid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        imageid\n        imageUrl\n        phoneid\n        createdAt\n        updatedAt\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n         \n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReportDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportDoc);\n","import React from \"react\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n}\n});\n\nclass Reg extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       email: \"rid@wan2.com\",\n       password : \"llalal\"\n      \n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.reg = this.reg.bind(this);\n    }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  reg() {\n    return client.request(`\n     mutation(\n       $email : String!\n       $pass : String!\n     ){\n      createUser(\n        authProvider : {\n          email : {\n            email : $email\n            password : $pass\n          }\n        }\n        \n      ){\n        id\n      }\n    }\n   \n  `,\n  {\n    email : this.state.email,\n    pass : this.state.password\n  })\n }\n\n  render() {\n   return (\n      \n    <div className=\"authMain\">\n    Hi\n    </div>\n   \n   \n  );\n  }\n}\n\nexport default Reg;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\nimport HospitalDashboard from \"../views/HospitalDashboard/HospitalDashboard.jsx\";\nimport CP_Hospital from \"../components/CP_Hospital/CP_Hospital.jsx\";\nimport SearchReport from \"../views/SearchReport/SearchReport.jsx\";\nimport CP_User from \"../components/CP_User/CP_User.jsx\";\nimport UserReport from \"../views/UserReport/UserReport.jsx\";\nimport SearchReportDoc from \"../views/SearchReportDoc/SearchReportDoc.jsx\";\nimport Reg from \"../components/Reg/Reg.jsx\";\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/cp_hospital\",\n        name: \"CP_Hospital\",\n        component: CP_Hospital\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    {\n        path: \"/hospitaldashboard\",\n        name: \"HospitalDashboard\",\n        component: HospitalDashboard\n    },\n    {\n        path: \"/searchreport\",\n        name: \"SearchReport\",\n        component: SearchReport\n    },\n    {\n        path: \"/cp_user\",\n        name: \"CP_User\",\n        component: CP_User\n    },\n    {\n        path: \"/userreport\",\n        name: \"UserReport\",\n        component: UserReport\n    },\n    {\n        path: \"/searchreportdoc\",\n        name: \"SearchReportDoc\",\n        component: SearchReportDoc\n    },\n    {\n        path: \"/reg\",\n        name: \"Reg\",\n        component: Reg\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}