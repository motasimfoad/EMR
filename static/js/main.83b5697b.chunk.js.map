{"version":3,"sources":["logo.svg","components/CustomButton/CustomButton.jsx","components/Prescription_Update/Prescription_Update.jsx","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","routes/dashboard.jsx","components/CR_Admin/CR_Admin.jsx","components/Header/Header.jsx","views/Auth/Auth.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","views/HospitalDashboard/HospitalDashboard.jsx","components/CP_Hospital/CP_Hospital.jsx","views/SearchReport/SearchReport.jsx","components/CP_User/CP_User.jsx","views/UserReport/UserReport.jsx","views/SearchReportDoc/SearchReportDoc.jsx","routes/index.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","CustomButton","_this$props","this","props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","className","rest","Object","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","react_default","a","createElement","reactstrap_es","assign","children","Component","Prescription_Update","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pname","history","location","some","nid","docname","drid","inputAddress","phnno","inputDetails","inputMed","viewPresciption","handleChange","bind","assertThisInitialized","evt","setState","defineProperty","target","id","value","_this2","react_apollo_browser_umd","mutation","gql","_templateObject","variables","owner","docid","chember","details","med","phn","updatePrescription","_ref","data","loading","error","react_loading_default","type","color","height","width","style","top","src","alt","components_CustomButton_CustomButton","href","md","onSubmit","handleSubmit","for","placeholder","onChange","size","onClick","React","Stats","stats","i","length","push","key","t","Dashboard","pathname","logInfoId","logInfo","logInfoToken","console","log","xs","sm","lg","tag","components_Stats_Stats","react_chartjs_2_es","dashboard24HoursPerformanceChart","options","dashboardEmailStatisticsChart","dashboardNASDAQChart","ListUser","query","UserPage_templateObject","allUsers","map","_ref2","createdAt","updatedAt","phone","name","utype","email","toggle","preDelete","isOpen","modal","viewPresciptionId","bordered","UserPage","up","delete","confirmAlert","title","buttons","label","alert","client","mutate","_templateObject2","refetchQueries","_templateObject3","expand","inline","UserPage_ListUser","Prescription_templateObject","allPrescriptions","Prescription","Prescription_templateObject2","Prescription_templateObject3","Prescription_ListUser","Prescription_Create","Prescription_Create_templateObject","CreatePrescription","createPrescription","Footer","default","fluid","Date","getYear","ps","dashRoutes","path","component","Create_Prescription","CR_Admin","onDrop","files","FormData","append","fetch","method","body","then","response","json","image","imageId","imageUrl","url","phoneid","back","submit","lo","window","reload","maxWidth","e","dist_es","accept","multiple","role","CR_Admin_templateObject","imageID","result","_this3","catch","Update_Prescription","pro","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","innerWidth","addEventListener","updateColor","indexOf","ref","openSidebar","getBrand","navbar","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","NavLink","to","activeClassName","handleActiveClick","handleBgClick","backgroundColor","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","components_Footer_Footer","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","login","register","tab","Auth_templateObject","password","signinUser","user","Auth_templateObject2","_this4","tabs","classnames","active","tabId","Unauth","Search","text","inputText","mode","handleSave","handleEdit","display","logOut","searchText","Search_templateObject","required","withApollo","Docdash","search","cp","sr","uname","CP_doc","CP_doc_templateObject","disabled","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","searchReport","UserPrescription_templateObject","UserPrescription","UserPrescription_ListUser","HospitalDashboard","CP_Hospital","hospitalId","hospitalName","CP_Hospital_templateObject","SearchReport","SearchReport_templateObject","allReports","imageid","CP_User","CP_User_templateObject","UserReport_templateObject","UserReport","UserReport_ListUser","SearchReportDoc","SearchReportDoc_templateObject","indexRoutes","d","__webpack_exports__","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","HttpLink","uri","ReactDOM","render","BrowserRouter","Router","getElementById","canvas","labels","datasets","borderColor","pointRadius","pointHoverRadius","borderWidth","legend","tooltips","enabled","scales","yAxes","ticks","fontColor","beginAtZero","maxTicksLimit","gridLines","drawBorder","zeroLineColor","xAxes","barPercentage","padding","pieceLabel","precision","fill","pointBorderColor","pointBorderWidth","position"],"mappings":"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","file":"static/js/main.83b5697b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/prescription\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\n\nclass Dashboard extends React.Component  {\n   \n \n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   modal: false,\n    //    logInfoId : '',\n    // };\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n      }\n        console.log(this.state.logInfoId);\n    }\n}\n  \n  render() {\n  \n    \n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Capacity</p>\n                      <CardTitle tag=\"p\">150GB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update Now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-money-coins text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <CardTitle tag=\"p\">$ 1,345</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-calendar\",\n                      t: \"Last day\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-vector text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Errors</p>\n                      <CardTitle tag=\"p\">23</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"far fa-clock\",\n                      t: \"In the last hour\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-favourite-28 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Followers</p>\n                      <CardTitle tag=\"p\">+45K</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Update now\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n        return data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            {/* <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button> */}\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    // this.setState({\n    //   data\n    // });\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    const obj = await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup className={\"no-border\"}>\n        <Input type=\"text\" placeholder=\"Search\"/>\n      </FormGroup>\n      <Button color=\"neutral\" icon round>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    // this.setState({\n    //   data\n    // });\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    const obj = await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup className={\"no-border\"}>\n        <Input type=\"text\" placeholder=\"Search\"/>\n      </FormGroup>\n      <Button color=\"neutral\" icon round>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\nimport CR_Admin from \"../components/CR_Admin/CR_Admin.jsx\"\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"List Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/list_users\",\n    name: \"List Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/cr_admin\",\n    name: \"Create Report\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: CR_Admin\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  \n  {\n    pro: true,\n    path: \"/\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  //{ redirect: true, path: \"/Auth\", pathTo: \"/Auth\", name: \"Auth\" }\n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label, Modal, ModalHeader, ModalBody, ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\nimport Loader from 'react-loader-spinner'\n\nclass CR_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneid: '',\n    };\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n\n\n     \n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    window.location.reload()\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n<div className=\"content\">\n<Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n       \n      </ModalFooter>\n    </Modal>\n   <div className=\"cphelperMain\">\n        <h2>Add Report for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your prescription.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phoneid && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n           \n          }\n          {this.state.phoneid && this.state.imageUrl &&\n            <Button color=\"danger\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-remove \"/> &nbsp;Discard</Button>\n           \n          }\n\n          \n        </div>\n      \n\n      </div>\n\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CR_Admin;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\n\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Hospital\") {\n        this.props.history.push({\n          pathname: '/hospitaldashboard',\n          state: { logInfo: [result.data.signinUser.token, \n            result.data.signinUser.user.id,\n            result.data.signinUser.user.phone,\n            result.data.signinUser.user.nid,\n          result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n      else {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n async register(){\n  await client.mutate({\n    mutation: gql`\n       mutation createUser($email: String!, $password: String!){\n        createUser(\n          authProvider : {\n            email: { \n              email: $email, \n              password: $password \n              }\n          }\n      ) {\n        id\n      }\n    }\n    `,\n    \n    variables: {\n      email: this.state.regEmail,\n      password: this.state.regPass\n    },\n\n  })\n  .then(result => { this.props.history.push({\n    pathname: '/dashboard',\n    state: { logInfo: [result.data.signinUser.token, \n                    result.data.signinUser.user.id] }\n  });\n   })\n  .catch(error => { console.log(error)});\n}\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\">CVIS</span><b> EMR</b> </h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        \n        <Button type=\"submit\" color=\"primary\" onClick={this.register}>Register</Button>\n      </form>\n\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport { \n  \n  Button,\n \n\n} from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n\n    };\n\n    this.back = this.back.bind(this);\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" />\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  CardText, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  \n \n\n} from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { timesSeries } from \"async\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n     \n\n    // };\n\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n      <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Add Prescription</CardTitle>\n            <Button onClick={this.cp} color=\"primary\">Add</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n        <CardBody>\n        <CardTitle>Search Prescription/Report</CardTitle>\n            <Button onClick={this.search} color=\"primary\">Prescription</Button>\n            <Button onClick={this.sr} color=\"primary\">Report</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Log Out</CardTitle>\n            <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n        </CardBody>\n      </Card>\n      </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   text: '', \n    //   inputText: '', \n    //   mode:'view',\n    //   result : []\n    // };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n      console.log(this.state.docname);\n  }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    // this.setState({\n    //   data\n    // });\n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n      nid: this.props.history.location.state.some[10],\n      docname: this.props.history.location.state.some[1],\n      drid: this.props.history.location.state.some[5],\n      inputAddress: this.props.history.location.state.some[6],\n      phnno: this.props.history.location.state.some[9],\n      inputDetails: this.props.history.location.state.some[2],\n      inputMed: this.props.history.location.state.some[7],\n      viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n          logInfoToken : this.props.history.location.state.logInfo[0],\n          currentdocname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.currentdocname);\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  CardText, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  \n \n\n} from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { timesSeries } from \"async\";\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.searchReport = this.searchReport.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.phone);\n        console.log(this.state.nid);\n        \n        \n        \n        \n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_user',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  \n search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  searchReport() {\n    this.props.history.push({\n      pathname: '/userreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Add Prescription / Report</CardTitle>\n            <pre>You will find this files under view report section</pre>\n            <Button onClick={this.cp} color=\"primary\">Add</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n        <CardBody>\n        <CardTitle>View Prescription/Report</CardTitle>\n            <Button onClick={this.search} color=\"primary\">Prescription</Button>\n            <Button onClick={this.searchReport} color=\"primary\">Report</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Log Out</CardTitle>\n            <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n        </CardBody>\n      </Card>\n      </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.nid);\n        console.log(this.state.phone);\n        \n        \n        \n        \n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  CardText, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  \n \n\n} from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { timesSeries } from \"async\";\n\nclass HospitalDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.phone);\n        console.log(this.state.nid);\n        \n        \n        \n        \n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_hospital',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/search',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img style={{width : 300}} src =\"https://images.vexels.com/media/users/3/144223/isolated/preview/f1d0807f8ffad0197757d840bdc97d0b--cone-do-registro-m-dico-by-vexels.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Add Report</CardTitle>\n            <Button onClick={this.cp} color=\"primary\">Add</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>View Prescription/Report</CardTitle>\n            <Button onClick={this.search} color=\"primary\">Prescription</Button>\n            <Button onClick={this.sr} color=\"primary\">Report</Button>\n        </CardBody>\n      </Card>\n      </Col>\n      <Col sm=\"4\">\n      <Card >\n        <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n        <CardBody>\n            <CardTitle>Log Out</CardTitle>\n            <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n        </CardBody>\n      </Card>\n      </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default HospitalDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label, Modal, ModalHeader, ModalBody, ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\nimport Loader from 'react-loader-spinner'\n\nclass CP_Hospital extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/hospitaldashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your prescription.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n  \n        \n        </div>\n      \n\n      \n< Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_Hospital;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReport);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label, Modal, ModalHeader, ModalBody, ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\nimport Loader from 'react-loader-spinner'\n\nclass CP_User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription / Report</h2>\n        <pre className=\"cpHospitalText\">Enter your NID/Birth Cirtificate no/ Passport No/ Phone No associated with <b>this account</b>. <br/>\n        Upload the image of your prescription/report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n  \n        \n        </div>\n      \n\n      \n< Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allReports($phn: String, $nid: String){\n      \n      allReports(\n        filter : {\n          OR : [{\n            phoneid : $phn\n          }, {\n            phoneid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        imageid\n        imageUrl\n        phoneid\n        createdAt\n        updatedAt\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n         \n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        console.log(this.state.logInfoId);\n        console.log(this.state.logInfoToken);\n        console.log(this.state.uname);\n        console.log(this.state.nid);\n        console.log(this.state.phone);\n        \n        \n        \n        \n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReportDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportDoc);\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\nimport HospitalDashboard from \"../views/HospitalDashboard/HospitalDashboard.jsx\";\nimport CP_Hospital from \"../components/CP_Hospital/CP_Hospital.jsx\";\nimport SearchReport from \"../views/SearchReport/SearchReport.jsx\";\nimport CP_User from \"../components/CP_User/CP_User.jsx\";\nimport UserReport from \"../views/UserReport/UserReport.jsx\";\nimport SearchReportDoc from \"../views/SearchReportDoc/SearchReportDoc.jsx\"\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/cp_hospital\",\n        name: \"CP_Hospital\",\n        component: CP_Hospital\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    {\n        path: \"/hospitaldashboard\",\n        name: \"HospitalDashboard\",\n        component: HospitalDashboard\n    },\n    {\n        path: \"/searchreport\",\n        name: \"SearchReport\",\n        component: SearchReport\n    },\n    {\n        path: \"/cp_user\",\n        name: \"CP_User\",\n        component: CP_User\n    },\n    {\n        path: \"/userreport\",\n        name: \"UserReport\",\n        component: UserReport\n    },\n    {\n        path: \"/searchreportdoc\",\n        name: \"SearchReportDoc\",\n        component: SearchReportDoc\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport Prescription_Update from \"./components/Prescription_Update/Prescription_Update\";\n\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  link: new HttpLink(),\n  // credentials: 'same-origin',\n  // headers: {\n  //   \"Access-Control-Allow-Origin\": \"*\", // Required for CORS support to work\n  //   \"Access-Control-Allow-Credentials\" : true\n  // },\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n  data: canvas => {\n    return {\n      labels: [1, 2, 3],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [342, 480, 530, 120]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: false\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: false\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}