{"version":3,"sources":["logo.svg","components/Stats/Stats.jsx","views/Dashboard/Dashboard.jsx","components/CustomButton/CustomButton.jsx","views/UserPage/UserPage.jsx","views/Prescription/Prescription.jsx","views/Report/Report.jsx","components/Prescription_Create/Prescription_Create.jsx","components/Prescription_Update/Prescription_Update.jsx","components/CR_Admin/CR_Admin.jsx","components/Update_User_Admin/Update_User_Admin.jsx","views/SearchReportAdmin/SearchReportAdmin.jsx","components/Footer/Footer.jsx","views/AdminSearch/AdminSearch.jsx","components/Sidebar/Sidebar.jsx","layouts/Dashboard/Dashboard.jsx","views/AdminSearchUser/AdminSearchUser.jsx","routes/dashboard.jsx","components/Header/Header.jsx","views/Auth/Auth.jsx","views/Unauth/Unauth.jsx","views/Search/Search.jsx","views/Docdash/Docdash.jsx","components/CP_doc/CP_doc.jsx","views/Docsearch/Docsearch.jsx","components/Doc_Prescription_Update/Doc_Prescription_Update.jsx","views/UserDashboard/UserDashboard.jsx","views/UserPrescription/UserPrescription.jsx","views/HospitalDashboard/HospitalDashboard.jsx","components/CP_Hospital/CP_Hospital.jsx","views/SearchReport/SearchReport.jsx","components/CP_User/CP_User.jsx","views/UserReport/UserReport.jsx","views/SearchReportDoc/SearchReportDoc.jsx","components/Reg/Reg.jsx","routes/index.jsx","index.js","variables/charts.jsx"],"names":["module","exports","__webpack_require__","p","Stats","stats","i","this","props","children","length","push","react_default","a","createElement","className","key","t","React","Component","USER_COUNT","gql","_templateObject","REP_COUNT","_templateObject2","PRES_COUNT","_templateObject3","Dashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","history","location","state","pathname","logInfoId","logInfo","logInfoToken","lo","_this2","client","query","_templateObject4","then","result","setState","data","userCount","count","catch","error","console","log","_this3","dashboardEmailStatisticsChart","canvas","labels","datasets","label","pointRadius","pointHoverRadius","backgroundColor","borderWidth","options","legend","display","pieceLabel","render","fontColor","precision","tooltips","enabled","scales","yAxes","ticks","gridLines","drawBorder","zeroLineColor","color","xAxes","barPercentage","reactstrap_es","xs","sm","md","lg","tag","components_Stats_Stats","react_apollo_browser_umd","_ref","loading","concat","message","_ref2","reportCount","_ref3","prescriptionCount","react_chartjs_2_es","dashboardNASDAQChart","width","height","CustomButton","_this$props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","rest","objectWithoutProperties","btnClasses","cx","btn-simple","btn-round","btn-icon","btn-neutral","btn-wd","btn-link","btn-fab","undefined","assign","ListUser","UserPage_templateObject","react_loading_default","type","allUsers","map","id","createdAt","updatedAt","phone","nid","name","utype","email","style","top","src","alt","components_CustomButton_CustomButton","onClick","toggle","up","preDelete","isOpen","modal","viewPresciptionId","bordered","UserPage","bind","assertThisInitialized","delete","some","confirmAlert","title","buttons","alert","mutate","mutation","UserPage_templateObject2","variables","refetchQueries","UserPage_templateObject3","UserPage_ListUser","Prescription_templateObject","allPrescriptions","docname","details","owner","docid","chember","med","phn","Prescription","Prescription_templateObject2","Prescription_templateObject3","Prescription_ListUser","Report_templateObject","allReports","imageUrl","imageid","phoneid","href","target","Report","Report_templateObject2","Report_templateObject3","Report_ListUser","Prescription_Create","pname","drid","inputAddress","phnno","inputDetails","inputMed","handleChange","evt","defineProperty","value","Prescription_Create_templateObject","CreatePrescription","createPrescription","onSubmit","handleSubmit","for","placeholder","onChange","size","Prescription_Update","viewPresciption","Prescription_Update_templateObject","updatePrescription","CR_Admin","onDrop","files","FormData","append","fetch","method","body","response","json","image","imageId","url","back","submit","window","reload","maxWidth","e","dist_es","accept","multiple","role","CR_Admin_templateObject","imageID","Update_User_Admin","Update_User_Admin_templateObject","updateUser","disabled","SearchReportAdmin","text","inputText","mode","handleSave","handleEdit","SearchReportAdmin_templateObject","SearchReportAdmin_templateObject2","searchText","SearchReportAdmin_templateObject3","_this4","required","expand","inline","withApollo","Footer","default","fluid","Date","getYear","AdminSearch","logOut","AdminSearch_templateObject","AdminSearch_templateObject2","AdminSearch_templateObject3","components_Footer_Footer","ps","AdminSearchUser","AdminSearchUser_templateObject","AdminSearchUser_templateObject2","AdminSearchUser_templateObject3","dashRoutes","path","component","Create_Prescription","Update_Prescription","redirect","pathTo","Header","dropdownOpen","dropdownToggle","dashboardRoutes","prop","collapse","views","document","documentElement","classList","refs","sidebarToggle","innerWidth","addEventListener","updateColor","indexOf","ref","openSidebar","getBrand","navbar","Sidebar","activeRoute","routeName","navigator","platform","PerfectScrollbar","sidebar","suppressScrollX","suppressScrollY","destroy","data-color","bgColor","data-active-color","activeColor","logo","routes","pro","NavLink","to","activeClassName","handleActiveClick","handleBgClick","mainPanel","action","scrollTop","scrollingElement","components_Sidebar_Sidebar","components_Header_Header","Switch","Redirect","from","Route","Client","GraphQLClient","headers","Auth","activeTab","loginEmail","loginPass","token","regEmail","regPass","regName","regId","regPhn","regType","login","reg","tab","Auth_templateObject","password","signinUser","user","pass","request","tabs","classnames","active","tabId","Unauth","Search","Search_templateObject","Docdash","search","cp","sr","uname","CP_doc","CP_doc_templateObject","Docsearch","Docsearch_templateObject","Doc_Prescription_Update","currentdrid","currentdocname","Doc_Prescription_Update_templateObject","UserDashboard","searchReport","UserPrescription_templateObject","UserPrescription","UserPrescription_ListUser","HospitalDashboard","CP_Hospital","hospitalId","hospitalName","CP_Hospital_templateObject","SearchReport","SearchReport_templateObject","CP_User","CP_User_templateObject","UserReport_templateObject","UserReport","UserReport_ListUser","SearchReportDoc","SearchReportDoc_templateObject","indexRoutes","Reg","d","__webpack_exports__","src_client","hist","createBrowserHistory","cache","InMemoryCache","ApolloClient","uri","ReactDOM","BrowserRouter","Router","getElementById","dashboard24HoursPerformanceChart","borderColor","beginAtZero","maxTicksLimit","padding","fill","pointBorderColor","pointBorderWidth","position"],"mappings":"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","file":"static/js/main.e5f571e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Stats extends React.Component {\n  render() {\n    var stats = [];\n    for (var i = 0; i < this.props.children.length; i++) {\n      stats.push(<i className={this.props.children[i].i} key={i} />);\n      stats.push(\" \" + this.props.children[i].t);\n      if (i !== this.props.children.length - 1) {\n        stats.push(<br />);\n      }\n    }\n    return <div className=\"stats\">{stats}</div>;\n  }\n}\n\nStats.propTypes = {\n  children: PropTypes.array\n};\n\nexport default Stats;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n// react plugin used to create charts\nimport { Line, Pie } from \"react-chartjs-2\";\n// function that returns a color based on an interval of numbers\n\nimport Stats from \"components/Stats/Stats.jsx\";\nimport {client} from \"../../index\";\n\nimport {\n  dashboard24HoursPerformanceChart,\n \n  dashboardNASDAQChart\n} from \"variables/charts.jsx\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nconst USER_COUNT = gql`\n {\n      userCount: _allUsersMeta {\n        count\n      }\n    }\n`;\n\nconst REP_COUNT = gql`\n {\n      reportCount: _allReportsMeta {\n        count\n      }\n    }\n`;\n\nconst PRES_COUNT = gql`\n {\n    prescriptionCount: _allPrescriptionsMeta {\n    count\n  }\n    }\n`;\n\nclass Dashboard extends React.Component  {\n   \n constructor(props) {\n    super(props);\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    } else {\n\n      this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n         lo : ''\n      }\n    }\n}\n\ncomponentDidMount() {\n  client.query({\n    query: gql`\n       {\n        userCount: _allUsersMeta(\n          filter : {\n            utype : \"Patient\"\n          }\n        ) {\n          count\n        }\n      }\n    `,\n    \n  })\n  .then(result => { \n    this.setState({\n      lo: result.data.userCount.count\n    });\n})\n  .catch(error => { console.log(error) });\n}\n\n  \n  render() {\n  \n    const dashboardEmailStatisticsChart = {\n\n      data: canvas => {\n        return {\n          labels: [1, 2, 3, 4],\n          datasets: [\n            {\n              label: \"Emails\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n              borderWidth: 0,\n              data: [this.state.lo, 20, 30, 10]\n            }\n          ]\n        };\n      },\n      options: {\n        legend: {\n          display: true\n        },\n    \n        pieceLabel: {\n          render: \"percentage\",\n          fontColor: [\"white\"],\n          precision: 2\n        },\n    \n        tooltips: {\n          enabled: true\n        },\n    \n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                display: false\n              },\n              gridLines: {\n                drawBorder: false,\n                zeroLineColor: \"transparent\",\n                color: \"rgba(255,255,255,0.05)\"\n              }\n            }\n          ],\n    \n          xAxes: [\n            {\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(255,255,255,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                display: false\n              }\n            }\n          ]\n        }\n      }\n    };\n\n    return (\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-globe text-warning\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Allocated Server Capacity</p>\n                      <CardTitle tag=\"p\">500MB</CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-sync-alt\",\n                      t: \"Currently Updated\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-02 text-success\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total User Registered</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={USER_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            data.userCount.count\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-credit-card text-danger\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Reports </p>\n                      <CardTitle tag=\"p\">\n                      <Query query={REP_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n\n                          return (\n                            data.reportCount.count\n                          );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={6} md={6} lg={3}>\n            <Card className=\"card-stats\">\n              <CardBody>\n                <Row>\n                  <Col xs={5} md={4}>\n                    <div className=\"icon-big text-center\">\n                      <i className=\"nc-icon nc-single-copy-04 text-primary\" />\n                    </div>\n                  </Col>\n                  <Col xs={7} md={8}>\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Total Prescriptions</p>\n                      <CardTitle tag=\"p\">\n                      <Query query={PRES_COUNT}>\n                        {({ loading, error, data }) => {\n                          if (loading) return \"Loading...\";\n                          if (error) return `Error! ${error.message}`;\n                       \n\n                          return (\n                           data.prescriptionCount.count\n                           );\n                        }}\n                      </Query>\n                      </CardTitle>\n                    </div>\n                  </Col>\n                </Row>\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-clock\",\n                      t: \"Data showing from your last login\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n        {/* <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Users Behavior</CardTitle>\n                <p className=\"card-category\">24 Hours performance</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboard24HoursPerformanceChart.data}\n                  options={dashboard24HoursPerformanceChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-history\",\n                      t: \" Updated 3 minutes ago\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row> */}\n        <Row>\n          <Col xs={12} sm={12} md={4}>\n            <Card>\n              <CardHeader>\n                <CardTitle>Email Statistics</CardTitle>\n                <p className=\"card-category\">Last Campaign Performance</p>\n              </CardHeader>\n              <CardBody>\n                <Pie\n                  data={dashboardEmailStatisticsChart.data}\n                  options={dashboardEmailStatisticsChart.options}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"legend\">\n                  <i className=\"fa fa-circle text-primary\" /> Opened{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> Read{\" \"}\n                  <i className=\"fa fa-circle text-danger\" /> Deleted{\" \"}\n                  <i className=\"fa fa-circle text-gray\" /> Unopened\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-calendar-alt\",\n                      t: \" Number of emails sent\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n          <Col xs={12} sm={12} md={8}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle>NASDAQ: AAPL</CardTitle>\n                <p className=\"card-category\">Line Chart With Points</p>\n              </CardHeader>\n              <CardBody>\n                <Line\n                  data={dashboardNASDAQChart.data}\n                  options={dashboardNASDAQChart.options}\n                  width={400}\n                  height={100}\n                />\n              </CardBody>\n              <CardFooter>\n                <div className=\"chart-legend\">\n                  <i className=\"fa fa-circle text-info\" /> Tesla Model S{\" \"}\n                  <i className=\"fa fa-circle text-warning\" /> BMW 5 Series\n                </div>\n                <hr />\n                <Stats>\n                  {[\n                    {\n                      i: \"fas fa-check\",\n                      t: \" Data information certified\"\n                    }\n                  ]}\n                </Stats>\n              </CardFooter>\n            </Card>\n          </Col>\n         </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n        return data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n    this.props.history.push({\n      pathname: '/uua',\n      state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {props.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Prescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Prescription;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport {client} from \"../../index\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Button color=\"danger\" onClick={() => {props.preDelete(id)}}>Delete</Button>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass Report extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      viewPresciptionId: null,\n    };\n    this.toggle = this.toggle.bind(this);\n    this.up = this.up.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n   \n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] }\n    })\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n\n  render() {\n    return (\n      <div className=\"content\">\n     \n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n\n      </Row>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Report;\n\n\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Create extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      docname: '',\n      drid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/cp\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder=\"Doctors Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder=\"Doctors ID\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Create;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: props.history.location.state.some[4],\n      nid: props.history.location.state.some[10],\n      docname: props.history.location.state.some[1],\n      drid: props.history.location.state.some[5],\n      inputAddress: props.history.location.state.some[6],\n      phnno: props.history.location.state.some[9],\n      inputDetails: props.history.location.state.some[2],\n      inputMed: props.history.location.state.some[7],\n      viewPresciption :  props.history.location.state.some[0],\n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Updated Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n          Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n          Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n          Health Issues : <b>{data.updatePrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n          </CardText>\n          <Button href=\"/prescription\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Prescription_Update;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\nclass CR_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phoneid: '',\n    };\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n   }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    window.location.reload()\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n          <div className=\"content\">\n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                <ModalHeader toggle={this.toggle}></ModalHeader>\n                <ModalBody className=\"crhosCenter\">\n                  <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n                  <br />\n                  <br />\n                <h3>Report Successfully Added</h3>\n                </ModalBody>\n                <ModalFooter>\n                \n                </ModalFooter>\n              </Modal>\n            <div className=\"cphelperMain\">\n                  <h2>Add Report for a Patient</h2>\n                  <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n                  Upload the image of your prescription.<br/>\n                  The submit button will automatically apper on your screen.\n                  </pre>\n                  <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n                    <Input\n                      className='cpHospitalInput'\n                      value={this.state.phoneid}\n                      placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n                      onChange={(e) => this.setState({phoneid: e.target.value})}\n                    />\n                    <br/>\n                    {!this.state.imageId &&\n                    <Dropzone\n                      className=\"dz\"\n                      onDrop={this.onDrop}\n                      accept='image/*'\n                      multiple={false}\n                    >\n                      <div><b>Drop an image or click to choose</b></div> \n                    </Dropzone>}\n                    {this.state.imageUrl &&\n                      <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n                    \n                    }\n                    {this.state.phoneid && this.state.imageUrl &&\n                      <Button color=\"danger\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-remove \"/> &nbsp;Discard</Button>\n                    \n                    }\n                  </div>\n                </div>\n              </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CR_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Update_User_Admin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.history.location.state.some[0],\n      createdAt: props.history.location.state.some[1],\n      updatedAt: props.history.location.state.some[2],\n      phone: props.history.location.state.some[3],\n      nid: props.history.location.state.some[4],\n      name: props.history.location.state.some[5],\n      utype: props.history.location.state.some[6],\n      email: props.history.location.state.some[7],\n      \n};\n      this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updateUser(\n        $id : ID!,\n        $phone: String!,\n        $nid: String,\n        $name: String!,\n        $utype: String!,\n       \n       ){\n          updateUser(\n              id : $id,\n            phone : $phone,\n            nid  : $nid ,\n            name  : $name,\n            utype   : $utype,\n           \n          ){\n            id\n            name\n            email\n            phone\n           }\n        }\n      `}\n      variables = {{\n        id : this.state.id,\n        phone: this.state.phone,\n        nid: this.state.nid,\n        name: this.state.name,\n        utype: this.state.utype,\n       \n      }}\n  >\n    {(updateUser, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>User Info Updated Successfully!!</CardTitle>\n          <CardText>\n          User ID : <b>{data.updateUser.id}</b>< br />\n          Name : <b>{data.updateUser.name}</b>< br />\n          Email : <b>{data.updateUser.email}</b>< br />\n          Contact No : <b>{data.updateUser.phone}</b>< br />\n          </CardText>\n          <Button href=\"/list_users\">Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Error :(</p>;\n       \n        \n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Update Prescription</h5>\n            <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n         </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">User Name</Label>\n              <Input type=\"text\"  id=\"name\" placeholder={this.state.name} onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">ID/ NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">User Id (System)</Label>\n              <Input type=\"text\"  id=\"id\" placeholder={this.state.id} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Created At</Label>\n              <Input type=\"text\"  id=\"createdAt\" placeholder={this.state.createdAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Updated At</Label>\n            <Input type=\"text\"  id=\"updatedAt\" placeholder={this.state.updatedAt} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">User contact no</Label>\n              <Input type=\"text\"  id=\"phone\" placeholder={this.state.phone} onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">User Role</Label>\n            <Input type=\"text\"  id=\"utype\" placeholder={this.state.utype} onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Email</Label>\n              <Input type=\"text\"  id=\"email\" placeholder={this.state.email} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updateUser()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n\n    </div>\n    );\n  }\n}\n\nexport default Update_User_Admin;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\n\n\nclass SearchReportAdmin extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n   }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n    await client.mutate({\n      mutation: gql`\n          mutation deleteReport($id: ID!) {\n            deleteReport(id: $id) {\n              \n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allReports{\n          id\n          imageid\n          imageUrl\n          phoneid\n          createdAt\n          updatedAt\n      }\n    }\n    `}] \n  });\n}\n\n \n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        </Alert>\n      \n       </div>\n       \n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportAdmin);\n","/*eslint-disable*/\nimport React from \"react\";\nimport { Container, Row } from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        className={\"footer\" + (this.props.default ? \" footer-default\" : \"\")}\n      >\n        <Container fluid={this.props.fluid ? true : false}>\n          <Row>\n            <div className=\"credits ml-auto\">\n              <div className=\"copyright\">\n                &copy; {1900 + new Date().getYear()}, made with <i className=\"fa fa-heart heart\"></i> by EMR\n              </div>\n            </div>\n          </Row> \n        </Container>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  default: PropTypes.bool,\n  fluid: PropTypes.bool\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n     await client.mutate({\n      mutation: gql`\n          mutation deletePrescription($id: ID!) {\n            deletePrescription(id: $id) {\n              owner\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n      allPrescriptions{\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n      }\n    }\n    `}] \n  });\n}\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    this.props.history.push({\n      pathname: '/up',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n           \n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearch);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Nav } from \"reactstrap\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport logo from \"logo.svg\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    return (\n      <div className=\"sidebar\" data-color={this.props.bgColor} data-active-color={this.props.activeColor}>\n        <div className=\"logo\">\n          <a\n            href=\"./dashboard\" \n            className=\"simple-text logo-mini\"\n          >\n            <div className=\"logo-img\">\n              <img src={logo} alt=\"react-logo\" />\n            </div>\n          </a>\n          <a\n            href=\"./dashboard\"\n            className=\"simple-text logo-normal\"\n          >\n            E M R \n          </a>\n        </div>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          <Nav>\n            {this.props.routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                  >\n                    <i className={prop.icon} />\n                    <p>{prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport Prescription_Update from \"../../components/Prescription_Update/Prescription_Update\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\nimport { confirmAlert } from \"react-confirm-alert\"; \nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\n\nclass AdminSearchUser extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n    this.delete = this.delete.bind(this);\n    this.preDelete = this.preDelete.bind(this);\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  preDelete(viewPresciptionId) {\n    confirmAlert({\n      title: 'Delete?',\n      \n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.delete(viewPresciptionId)\n        },\n        {\n          label: 'No',\n          onClick: () => alert('Delete action cancelled')\n        }\n      ]\n    })\n  }\n  \n\n  async delete(viewPresciptionId){\n    alert(\"Successfully Deleted\")\n      await client.mutate({\n      mutation: gql`\n          mutation deleteUser($id: ID!) {\n            deleteUser(id: $id) {\n              phone\n              id\n            }\n          }\n      `,\n      \n      variables: {\n          id : viewPresciptionId\n      },\n      refetchQueries: [{\n        query : gql`\n      {\n        allUsers{\n          name\n          id\n          phone\n          nid\n          utype\n          createdAt\n          updatedAt\n          email\n        }\n    }\n    `}] \n  });\n}\n\nup(id, createdAt, updatedAt, phone, nid , name, utype, email) {\n \n  this.props.history.push({\n    pathname: '/uua',\n    state: { some: [id, createdAt, updatedAt, phone, nid , name, utype, email] }\n  })\n}\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allUsers($searchText: String!){\n      \n          allUsers\n          (\n            filter :{\n            OR: [\n              {\n                nid : $searchText\n              },\n              {\n                phone : $searchText\n              },\n              {\n                email : $searchText\n              }\n            ]\n          }\n          )\n          {\n            name\n            id\n            phone\n            nid\n            utype\n            createdAt\n            updatedAt\n            email\n          }\n\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allUsers);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div className=\"content\">\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for User <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id/ email\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        \n        </form>\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n       \n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allUsers.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No User found corresponding to given id/nid/phone/passport/birthcirtificate/email.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allUsers.map(({ id, createdAt, updatedAt, phone, nid , name, utype, email }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"https://openclipart.org/download/247319/abstract-user-flat-3.svg\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Name : {name}</CardTitle>\n            <CardText><b>User Type :</b> {utype}</CardText>\n            <CardText><b>Created At :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Button color=\"default\" onClick={() => {this.up(id, createdAt, updatedAt, phone, nid , name, utype, email)}}>Update</Button> \n            <Button color=\"danger\" onClick={() => {this.preDelete(id)}}>Delete</Button>\n            \n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Details of : <b><i>{name}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n               Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Name :  &nbsp; {name}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Phone :  &nbsp; {phone}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Nid :  &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Email :  &nbsp; {email}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              User Type :  &nbsp; {utype}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>    \n      ))\n      }\n\n      </Row>\n      </div>\n    \n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(AdminSearchUser);\n","import Dashboard from \"views/Dashboard/Dashboard.jsx\";\nimport UserPage from \"views/UserPage/UserPage.jsx\";\nimport Prescription from \"views/Prescription/Prescription.jsx\";\nimport Report from \"views/Report/Report.jsx\";\nimport Create_Prescription from \"components/Prescription_Create/Prescription_Create.jsx\";\nimport Update_Prescription from \"components/Prescription_Update/Prescription_Update.jsx\";\nimport CR_Admin from \"../components/CR_Admin/CR_Admin.jsx\";\nimport Update_User_Admin from \"components/Update_User_Admin/Update_User_Admin.jsx\";\nimport SearchReportAdmin from \"../views/SearchReportAdmin/SearchReportAdmin.jsx\";\nimport AdminSearch from \"../views/AdminSearch/AdminSearch.jsx\";\nimport AdminSearchUser from \"../views/AdminSearchUser/AdminSearchUser.jsx\";\n\nvar dashRoutes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-bank\",\n    component: Dashboard\n  },\n  {\n    path: \"/prescription\",\n    name: \"List Presciption\",\n    icon: \"nc-icon nc-paper\",\n    component: Prescription\n  },\n  { \n    path: \"/cp\",\n    name: \"Create Prescription\",\n    icon: \"nc-icon nc-ruler-pencil\",\n    component: Create_Prescription\n  },\n  {\n    path: \"/sp_admin\",\n    name: \"Search Prescription\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearch\n  },\n  {\n    path: \"/list_users\",\n    name: \"List Users\",\n    icon: \"nc-icon nc-single-02\",\n    component: UserPage\n  },\n  {\n    path: \"/s_u\",\n    name: \"Search User\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: AdminSearchUser\n  },\n  {\n    path: \"/list_report\",\n    name: \"List Report\",\n    icon: \"nc-icon nc-bullet-list-67\",\n    component: Report\n  },\n  {\n    path: \"/cr_admin\",\n    name: \"Add Report\",\n    icon: \"nc-icon nc-cloud-upload-94\",\n    component: CR_Admin\n  },\n  {\n    path: \"/sr_admin\",\n    name: \"Search Report\",\n    icon: \"nc-icon nc-zoom-split\",\n    component: SearchReportAdmin\n  },\n  {\n    path: \"/auth\",\n    name: \"Log Out\",\n    icon: \"nc-icon nc-spaceship\"\n  },\n  {\n    path: \"/up\",\n    component: Update_Prescription\n  },\n  {\n    path: \"/uua\",\n    component: Update_User_Admin\n  },\n  \n  { redirect: true, path: \"/\", pathTo: \"/auth\", name: \"Auth\" },\n  \n];\nexport default dashRoutes;\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Container,\n} from \"reactstrap\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    var name;\n    dashboardRoutes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      } else {\n        if (prop.redirect) {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        } else {\n          if (prop.path === this.props.location.pathname) {\n            name = prop.name;\n          }\n        }\n      }\n      return null;\n    });\n    return name;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.refs.sidebarToggle.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.refs.sidebarToggle.classList.toggle(\"toggled\");\n    }\n  }\n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-toggle\">\n              <button\n                type=\"button\"\n                ref=\"sidebarToggle\"\n                className=\"navbar-toggler\"\n                onClick={() => this.openSidebar()}\n              >\n                <span className=\"navbar-toggler-bar bar1\" />\n                <span className=\"navbar-toggler-bar bar2\" />\n                <span className=\"navbar-toggler-bar bar3\" />\n              </button>\n            </div>\n            <NavbarBrand>{this.getBrand()}</NavbarBrand>\n          </div>\n          <NavbarToggler onClick={this.toggle}>\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\n          </NavbarToggler>\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { \n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Button,\n  TabContent, \n  TabPane, \n  Nav, \n  NavItem, \n  NavLink, \n\n} from \"reactstrap\";\nimport classnames from 'classnames';\nimport {client} from \"../../index\";\nimport gql from \"graphql-tag\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst Client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n\n }\n});\n\nclass Auth extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      loginEmail : '',\n      loginPass : '',\n      token : '',\n      regEmail : '',\n      regPass : '',\n      regName : '',\n      regId : '',\n      regPhn : '',\n      regType : '',\n\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    \n    this.reg = this.reg.bind(this);\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  async login(){\n     await client.mutate({\n      mutation: gql`\n         mutation signinUser($email: String!, $password: String!){\n        signinUser(\n          email: { email: $email, password: $password }\n        ) {\n          token\n          user {\n            id\n            utype\n            email\n            name\n            phone\n            nid\n            prescriptions {\n              docname\n              docid\n              details\n              med\n            }\n          }\n        }\n      }\n      `,\n      \n      variables: {\n        email: this.state.loginEmail,\n        password: this.state.loginPass\n      },\n\n    })\n    .then(result => { \n      \n      if (result.data.signinUser.user.utype === \"Pharmacy\") {\n        this.props.history.push({\n          pathname: '/search',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Doctor\") {\n        this.props.history.push({\n          pathname: '/docdash',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Hospital\") {\n        this.props.history.push({\n          pathname: '/hospitaldashboard',\n          state: { logInfo: [result.data.signinUser.token, \n            result.data.signinUser.user.id,\n            result.data.signinUser.user.phone,\n            result.data.signinUser.user.nid,\n          result.data.signinUser.user.name] }\n        });\n      } else if(result.data.signinUser.user.utype === \"Patient\") {\n        this.props.history.push({\n          pathname: '/userdashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n       else if(result.data.signinUser.user.utype === \"Admin\") {\n        this.props.history.push({\n          pathname: '/dashboard',\n          state: { logInfo: [result.data.signinUser.token, \n                          result.data.signinUser.user.id,\n                          result.data.signinUser.user.phone,\n                          result.data.signinUser.user.nid,\n                        result.data.signinUser.user.name] }\n        });\n      }\n     })\n    .catch(error => { alert(\"Incorrect username or password\") });\n }\n\n\n\nreg() {\n  const email = this.state.regEmail\n  const pass = this.state.regPass \n  const nid = this.state.regId\n  const phone = this.state.regPhn\n  const utype = this.state.regType\n  const name = this.state.regName\n\n  return Client.request(`\n   mutation(\n     $email : String!\n     $pass : String!\n     $nid : String\n     $phone : String\n     $utype : String\n     $name : String\n   ){\n    createUser(\n      authProvider : {\n        email : {\n          email : $email\n          password : $pass\n        }\n      }\n      nid : $nid\n      phone : $phone\n      utype : $utype \n      name : $name\n    ){\n      id\n    }\n  }\n \n`,\n{\n  email,\n  pass ,\n  nid,\n  phone,\n  utype,\n  name\n})\n.then(result => { \n  alert(\"User registered successfully\")\n  \n\n})\n.catch(error => { alert(\"Email Id is already registered\") })\n}\n\n\n  render() {\n    return (\n      <div className=\"authMain\">\n      <h2 className=\"mainAuthLogo\"><span className=\"authPageTextLogo\">CVIS</span><b> EMR</b> </h2>\n      <div className =\"authFormHelper\">\n      <div className=\"authForm\">\n\n      \n      \n      <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              Login\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              Register\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n\n          <TabPane tabId=\"1\">\n          \n          <form className=\"authFormDevider\">\n          <FormGroup>\n            <Label for=\"exampleEmail\">Email address</Label>\n            <Input\n              type=\"email\"\n              id=\"loginEmail\"\n              placeholder=\"Enter email\"\n              onChange={this.handleChange}\n            />\n            <FormText color=\"muted\">\n              We'll never share your email with anyone else.\n            </FormText>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              id=\"loginPass\"\n              placeholder=\"Password\"\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n        <Button color=\"primary\" onClick={this.login}>\n            Login\n          </Button>\n          </form>\n\n          </TabPane>\n          \n          <TabPane tabId=\"2\">\n\n          <form className=\"authFormDevider\">\n          <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputEmail4\">Email</Label>\n            <Input type=\"email\"  id=\"regEmail\" placeholder=\"Email\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputPassword4\">Password</Label>\n            <Input type=\"password\"  id=\"regPass\" placeholder=\"Password\" onChange={this.handleChange}/>\n          </FormGroup>\n         </div>\n          <FormGroup>\n            <Label for=\"inputAddress\">Name</Label>\n            <Input type=\"text\"  id=\"regName\" placeholder=\"User Full Name\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"inputAddress2\">Identification Number</Label>\n            <Input type=\"text\"  id=\"regId\" placeholder=\"Nid / Passport / Birth Cirtificate/ Doctor, Pharma or Hospitals licence no\" onChange={this.handleChange}/>\n          </FormGroup>\n        <div className=\"form-row\">\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputCity\">Phone</Label>\n            <Input type=\"text\"  id=\"regPhn\" onChange={this.handleChange}/>\n          </FormGroup>\n          <FormGroup className=\"col-md-6\">\n            <Label for=\"inputState\">User Type</Label>\n            <Input type=\"select\" name=\"select\" id=\"regType\" onChange={this.handleChange}>\n              <option>Please Select</option>\n              <option>Patient</option>\n              <option>Doctor</option>\n              <option>Pharmacy</option>\n              <option>Hospital</option>\n            </Input>\n          </FormGroup>\n         \n        </div>\n        </form>\n      <Button type=\"submit\" color=\"primary\" onClick={this.reg}>Register</Button>\n          </TabPane>\n        </TabContent>\n      </div>\n      \n      </div>\n      </div>\n     );\n  }\n  \n}\n\nexport default Auth;\n","import React from \"react\";\nimport { \n  Button\n } from \"reactstrap\";\n\nclass Unauth extends React.Component {\n\n  constructor(props) {\n    super(props);\n     this.back = this.back.bind(this);\n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"unauthMain\">\n       <img className=\"unauthImg\" src=\"https://cdn.shopify.com/s/files/1/2439/4751/products/No_Access_1024x1024.jpg?v=1507696736\" alt=\"Unauthoized\"/>\n       <h1>Unauthorizes Access !!</h1>\n       <Button onClick={this.back}>Get Authorized</Button>\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Unauth;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Search extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n          <Navbar expand=\"lg\" color=\"dark\">\n          <Form inline className=\"ml-auto\">\n          <FormGroup >\n            <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n          </FormGroup>\n          <Button  color=\"neutral\" icon round onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n          </Form>\n          </Navbar>\n          <div>\n          <Row>\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Search);\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n  } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass Docdash extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoId : this.props.history.location.state.logInfo[1],\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        uname : this.props.history.location.state.logInfo[2]\n      }\n        console.log(this.state.logInfoId);\n    }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_doc',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n          <img src =\"https://images.vexels.com/media/users/3/144185/isolated/lists/a9075b02366ea61e8995f8d5b08d0267-flat-doctor-cartoon.png\" />\n            <h3>Welcome Doctor <b>{this.state.uname}</b> !!</h3>\n              <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription</CardTitle>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>Search Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.sr} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default Docdash;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\nimport Footer from \"../../components/Footer/Footer.jsx\";\n\nclass CP_doc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pname: '',\n      nid: '',\n      inputAddress: '',\n      phnno: '',\n      inputDetails: '',\n      inputMed: ''\n};\n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            drid : this.props.history.location.state.logInfo[0],\n          logInfoToken : this.props.history.location.state.logInfo[1],\n          docname : this.props.history.location.state.logInfo[2]\n        }\n          console.log(this.state.uname);\n      }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation createPrescription(\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          createPrescription(\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(CreatePrescription, {data, loading, error}) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (data) return  <div className=\"successCreateNoify\">\n        <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n          <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n          <CardTitle>Prescription Created Successfully!!</CardTitle>\n          <CardText>\n          Prescription ID : <b>{data.createPrescription.id}</b>< br />\n          Patient Name : <b>{data.createPrescription.owner}</b>< br />\n          Doctor Name : <b>{data.createPrescription.docname}</b>< br />\n          Health Issues : <b>{data.createPrescription.details}</b>< br />\n          Paitent Contact No : <b>{data.createPrescription.phn}</b>< br />\n          </CardText>\n          <Button onClick={this.back}>Back</Button>\n        </Card>\n       </div> ;\n      if (error) return <p>Invalid Docor Id</p>;\n      return  <Row>\n      <Col md={12}>\n        <Card>\n          <CardHeader>\n            <h5 className=\"title\">Fill Up The Form With Patient Information</h5>\n            \n          </CardHeader>\n          <CardBody>\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"pname\">Patient Name</Label>\n              <Input type=\"text\"  id=\"pname\" placeholder=\"Patient Name\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n              <Input type=\"text\"  id=\"nid\" placeholder=\"NID / Passpost No / Birth Cirtificate No\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"docname\">Doctors Name</Label>\n              <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange} disabled/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"drid\">Doctors ID</Label>\n              <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange} disabled/>\n            </FormGroup>\n          </div>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-6\">\n            <Label for=\"inputAddress\">Chember Address</Label>\n            <Input type=\"text\"  id=\"inputAddress\" placeholder=\"Doctors Chember Address\" onChange={this.handleChange}/>\n            </FormGroup>\n            <FormGroup className=\"col-md-6\">\n              <Label for=\"phnno\">Patient contact no</Label>\n              <Input type=\"text\"  id=\"phnno\" placeholder=\"Patient contact no\" onChange={this.handleChange}/>\n            </FormGroup>\n          </div>\n          <FormGroup>\n            <Label for=\"inputDetails\">Details</Label>\n            <Input type=\"text\"  id=\"inputDetails\" placeholder=\"Issues regarding the patient\" onChange={this.handleChange}/>\n          </FormGroup>\n          <div className=\"form-row\">\n            <FormGroup className=\"col-md-12\">\n              <Label for=\"inputMed\">Medicin</Label>\n              <Input type=\"text\"  id=\"inputMed\" placeholder=\"Suggested medicins for the patient\" onChange={this.handleChange}/>\n            </FormGroup>\n          \n          </div>\n          \n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{CreatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Create</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>;\n            }}\n        </Mutation>\n< Footer />\n    </div>\n    );\n  }\n}\n\nexport default CP_doc;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass Docsearch extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.up = this.up.bind(this);\n    this.back = this.back.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n      this.state = {\n        drid : this.props.history.location.state.logInfo[1],\n      logInfoToken : this.props.history.location.state.logInfo[0],\n      docname : this.props.history.location.state.logInfo[2],\n      text: '', \n    inputText: '', \n    mode:'view',\n    result : []\n    }\n   }\n  }\n  \n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn , nid) {\n    \n    this.props.history.push({\n      pathname: '/doc_prescription_update',\n      state: { some: [id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid] , \n        logInfo: [this.state.drid, \n          this.state.logInfoToken,\n          this.state.docname\n        ]         \n      }\n    })\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docdash',\n      state: { logInfo: [this.state.drid, \n        this.state.logInfoToken,\n        this.state.docname\n      ] }\n    });\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allPrescriptions($searchText: String!){\n      \n          allPrescriptions(\n            filter : {\n            OR : [{\n                nid : $searchText\n              },{\n                phn : $searchText\n              }\n              ]\n          }\n          ){\n            id\n            docname\n            docid\n            details\n            createdAt\n            owner\n            chember\n            med\n            updatedAt\n            phn\n            nid\n          }\n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allPrescriptions);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for prescription <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button type=\"submit\" value=\"Submit\" color=\"info\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      {this.state.result.data.allPrescriptions.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No prescription found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"default\" onClick={() => {this.up(id , docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid)}}>Update</Button>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      <Button className=\"searchBtHelper\" type=\"submit\" value=\"Submit\" color=\"info\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(Docsearch);\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  CardHeader,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport { Mutation } from \"react-apollo\";\nimport ReactLoading from 'react-loading';\n\nclass Doc_Prescription_Update extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n      this.handleChange = this.handleChange.bind(this);\n      this.back = this.back.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            pname: this.props.history.location.state.some[4],\n            nid: this.props.history.location.state.some[10],\n            docname: this.props.history.location.state.some[1],\n            drid: this.props.history.location.state.some[5],\n            inputAddress: this.props.history.location.state.some[6],\n            phnno: this.props.history.location.state.some[9],\n            inputDetails: this.props.history.location.state.some[2],\n            inputMed: this.props.history.location.state.some[7],\n            viewPresciption :  this.props.history.location.state.some[0],\n            currentdrid : this.props.history.location.state.logInfo[1],\n            logInfoToken : this.props.history.location.state.logInfo[0],\n            currentdocname : this.props.history.location.state.logInfo[2]\n        }\n      }\n\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/docsearch',\n      state: { logInfo: [this.state.currentdrid, \n        this.state.logInfoToken,\n        this.state.currentdocname\n      ] }\n    });\n  }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  render() {\n   return (\n      \n   <div className=\"content\">\n\n      <Mutation\n      mutation={gql`\n      mutation updatePrescription(\n        $id : ID!,\n        $owner: String!,\n        $nid: String,\n        $docname: String!,\n        $docid: String!,\n        $chember: String,\n        $details: String!,\n        $med: String,\n        $phn: String\n       ){\n          updatePrescription(\n              id : $id,\n            owner: $owner,\n            nid  : $nid ,\n        docname  : $docname,\n         docid   : $docid,\n        chember  : $chember,\n        details  : $details,\n           med   : $med,\n          phn    : $phn\n          ){\n            id\n            owner\n            docname\n            details\n            phn\n          }\n        }\n      `}\n      variables = {{\n        id : this.state.viewPresciption,\n        owner: this.state.pname,\n        nid: this.state.nid,\n        docname: this.state.docname,\n        docid: this.state.drid,\n        chember: this.state.inputAddress,\n        details: this.state.inputDetails,\n        med: this.state.inputMed,\n        phn: this.state.phnno,\n      }}\n  >\n    {(updatePrescription, {data, loading, error}) => {\n          if (loading) return <div>\n          <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n          </div>;\n          if (data) return  <div className=\"successCreateNoify\">\n            <Card className=\"successCreateNoifyHelper\" style={{width: '30rem'}}>\n              <CardImg top src=\"https://cdn2.iconfinder.com/data/icons/greenline/512/check-512.png\" alt=\"Card image cap\" />\n              <CardTitle>Prescription Updated Successfully!!</CardTitle>\n              <CardText>\n              Prescription ID : <b>{data.updatePrescription.id}</b>< br />\n              Patient Name : <b>{data.updatePrescription.owner}</b>< br />\n              Doctor Name : <b>{data.updatePrescription.docname}</b>< br />\n              Health Issues : <b>{data.updatePrescription.details}</b>< br />\n              Paitent Contact No : <b>{data.updatePrescription.phn}</b>< br />\n              </CardText>\n              <Button onClick={this.back}>Back</Button>\n            </Card>\n          </div> ;\n          if (error) return <p>Error :(</p>;\n          \n            \n          return  <Row>\n          <Col md={12}>\n            <Card>\n              <CardHeader>\n                <h5 className=\"title\">Update Prescription</h5>\n                <Alert color=\"warning\"><b>Input fields are already filled with existing prescription data</b> </Alert>\n            </CardHeader>\n              <CardBody>\n              <form onSubmit={this.handleSubmit}>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"pname\">Patient Name</Label>\n                  <Input type=\"text\"  id=\"pname\" placeholder={this.state.pname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"nid\">NID / Passpost No / Birth Cirtificate No</Label>\n                  <Input type=\"text\"  id=\"nid\" placeholder={this.state.nid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"docname\">Doctors Name</Label>\n                  <Input type=\"text\"  id=\"docname\" placeholder={this.state.docname} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"drid\">Doctors ID</Label>\n                  <Input type=\"text\"  id=\"drid\" placeholder={this.state.drid} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-6\">\n                <Label for=\"inputAddress\">Chember Address</Label>\n                <Input type=\"text\"  id=\"inputAddress\" placeholder={this.state.inputAddress} onChange={this.handleChange}/>\n                </FormGroup>\n                <FormGroup className=\"col-md-6\">\n                  <Label for=\"phnno\">Patient contact no</Label>\n                  <Input type=\"text\"  id=\"phnno\" placeholder={this.state.phnno} onChange={this.handleChange}/>\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"inputDetails\">Details</Label>\n                <Input type=\"text\"  id=\"inputDetails\" placeholder={this.state.inputDetails} onChange={this.handleChange}/>\n              </FormGroup>\n              <div className=\"form-row\">\n                <FormGroup className=\"col-md-12\">\n                  <Label for=\"inputMed\">Medicin</Label>\n                  <Input type=\"text\"  id=\"inputMed\" placeholder={this.state.inputMed} onChange={this.handleChange}/>\n                </FormGroup>\n              \n              </div>\n              \n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={()=>{updatePrescription()}}><i className=\"fa fa-save\"/> &nbsp;Update</Button>\n              <Button type=\"submit\" value=\"Submit\" color=\"success\" size=\"lg\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n            </form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>;\n                }}\n            </Mutation>\n\n        </div>\n        );\n  }\n}\n\nexport default Doc_Prescription_Update;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\n\nclass UserDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.searchReport = this.searchReport.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n      }\n     }\n   \n  }\n\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_user',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  \n search() {\n    this.props.history.push({\n      pathname: '/userprescription',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  searchReport() {\n    this.props.history.push({\n      pathname: '/userreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img src =\"https://img10.androidappsapk.co/300/0/d/4/com.outpatient.williamosler.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n          <Row className=\"ddcenterbuttongroup\">\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Add Prescription / Report</CardTitle>\n                  <pre>You will find this files under view report section</pre>\n                  <Button onClick={this.cp} color=\"primary\">Add</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n              <CardBody>\n              <CardTitle>View Prescription/Report</CardTitle>\n                  <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                  <Button onClick={this.searchReport} color=\"primary\">Report</Button>\n              </CardBody>\n            </Card>\n            </Col>\n            <Col sm=\"4\">\n            <Card >\n              <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n              <CardBody>\n                  <CardTitle>Log Out</CardTitle>\n                  <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n              </CardBody>\n            </Card>\n            </Col>\n          </Row>\n        <Footer />\n      </div>\n     );\n  }\n  \n}\n\nexport default UserDashboard;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allPrescriptions($phn: String, $nid: String){\n      \n      allPrescriptions(\n        filter : {\n          OR : [{\n            phn : $phn\n          }, {\n            nid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        docname\n        docid\n        details\n        createdAt\n        owner\n        chember\n        med\n        updatedAt\n        phn\n        nid\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allPrescriptions.map(({ id, docname, details, createdAt, owner, docid, chember, med, updatedAt, phn, nid }) => (\n         \n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src=\"http://icons-for-free.com/free-icons/png/512/1290990.png\" alt=\"...\"/>\n          <CardBody>\n            <CardTitle>Doctor : {docname}</CardTitle>\n            <CardText><b>Problem :</b> {details}</CardText>\n            <CardText><b>Date :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n            <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n            <ModalHeader toggle={props.toggle}><p>Prescription of <b><i>{owner}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Doctor :  &nbsp; {docname}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              DocID :  &nbsp; {docid}\n               </td>\n              </tr>\n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phn}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Patient Id : &nbsp; {nid}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Chember :  &nbsp; {chember}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Details :  &nbsp; {details}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Medicine :  &nbsp; {med}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserPrescription extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n        }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPrescription;\n","import React from \"react\";\nimport { \n  Card, \n  CardTitle, \n  Row, \n  Col,\n  CardImg,\n  CardBody\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport Footer from \"../../components/Footer/Footer\";\n\nclass HospitalDashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.back = this.back.bind(this);\n    this.search = this.search.bind(this);\n    this.cp = this.cp.bind(this);\n    this.sr = this.sr.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        logInfoToken : this.props.history.location.state.logInfo[0],\n        logInfoId : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[2],\n        nid : this.props.history.location.state.logInfo[3],\n        uname : this.props.history.location.state.logInfo[4],\n        }\n      }\n   }\n\n  back() {\n    this.props.history.push({\n      pathname: '/auth'\n     });\n  }\n\n  cp() {\n    this.props.history.push({\n      pathname: '/cp_hospital',\n      state: { logInfo: [this.state.nid, \n        this.state.logInfoToken,\n        this.state.uname,\n        this.state.phone\n      ] }\n    });\n  }\n\n  search() {\n    this.props.history.push({\n      pathname: '/search',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n  sr() {\n    this.props.history.push({\n      pathname: '/searchreport',\n      state: { logInfo: [this.state.logInfoId, \n        this.state.logInfoToken,\n        this.state.nid,\n        this.state.phone,\n        this.state.uname] }\n    });\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"ddmain\">\n      <img style={{width : 300}} src =\"https://images.vexels.com/media/users/3/144223/isolated/preview/f1d0807f8ffad0197757d840bdc97d0b--cone-do-registro-m-dico-by-vexels.png\" />\n      <h3>Welcome  <b>{this.state.uname}</b> !!</h3>\n        <Row className=\"ddcenterbuttongroup\">\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://us.123rf.com/450wm/hilch/hilch1802/hilch180200503/94767811-date-and-time-calendar-and-add-event-thin-line-flat-color-icon-vector-illustration-pictogram-isolate.jpg?ver=6\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Add Report</CardTitle>\n                <Button onClick={this.cp} color=\"primary\">Add</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://cdn.dribbble.com/users/77712/screenshots/1170246/flat_read.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>View Prescription/Report</CardTitle>\n                <Button onClick={this.search} color=\"primary\">Prescription</Button>\n                <Button onClick={this.sr} color=\"primary\">Report</Button>\n            </CardBody>\n          </Card>\n          </Col>\n          <Col sm=\"4\">\n          <Card >\n            <CardImg top src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Circle-icons-power.svg/1024px-Circle-icons-power.svg.png\" alt=\"...\"/>\n            <CardBody>\n                <CardTitle>Log Out</CardTitle>\n                <Button onClick={this.back} color=\"primary\" >Log Out</Button>\n            </CardBody>\n          </Card>\n          </Col>\n    </Row>\n    <Footer />\n      </div>\n     \n     \n    );\n  }\n  \n}\n\nexport default HospitalDashboard;\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter ,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_Hospital extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/hospitaldashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription for a Patient</h2>\n        <pre className=\"cpHospitalText\">Enter the patients NID/Birth Cirtificate no/ Passport No/ Phone No. <br/>\n        Upload the image of your prescription.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n          <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n            <ModalHeader toggle={this.toggle}></ModalHeader>\n            <ModalBody className=\"crhosCenter\">\n              <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n              <br />\n              <br />\n            <h3>Report Successfully Added</h3>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"info\" onClick={this.back}>Back</Button>\n              <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    \n\n\n   \n    \n    \n   )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_Hospital;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n        <Navbar expand=\"lg\" color=\"dark\">\n        <Form inline className=\"ml-auto\">\n        <FormGroup >\n          <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n        </FormGroup>\n        <Button  color=\"neutral\" icon round onClick={this.display}>\n        <i className=\"nc-icon nc-zoom-split\"></i>\n        </Button>\n        </Form>\n        </Navbar>\n        <div>\n        <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReport);\n","import React from \"react\";\nimport {\n  Modal, \n  ModalHeader,\n  ModalBody, \n  ModalFooter,\n  Input\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport Footer from \"../Footer/Footer.jsx\";\nimport Dropzone from 'react-dropzone';\nimport {client} from \"../../index\";\n\n\nclass CP_User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n      this.back = this.back.bind(this);\n      this.submit = this.submit.bind(this);\n      this.lo = this.lo.bind(this);\n      this.toggle = this.toggle.bind(this);\n\n      if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n        this.props.history.push({\n          pathname: '/unauth',\n        });\n      }\n      else {\n          this.state = {\n            modal: false,\n            phoneid: '',\n            hospitalId : this.props.history.location.state.logInfo[0],\n            logInfoToken : this.props.history.location.state.logInfo[1],\n            hospitalName : this.props.history.location.state.logInfo[2],\n            phnno : this.props.history.location.state.logInfo[3],\n        }\n          \n      }\n\n  }\n\n  lo() {\n    this.props.history.push({\n      pathname: '/auth'\n     \n    });\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state: { logInfo: [this.state.hospitalId, \n        this.state.logInfoToken,\n        this.state.hospitalName,\n        this.state.phnno,\n      ] }\n    });\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n\n    return (\n\n   <div className=\"cphelperMain\">\n        <h2>Add prescription / Report</h2>\n        <pre className=\"cpHospitalText\">Enter your NID/Birth Cirtificate no/ Passport No/ Phone No associated with <b>this account</b>. <br/>\n        Upload the image of your prescription/report.<br/>\n        The submit button will automatically apper on your screen.\n        </pre>\n        <div style={{ maxWidth: 400 }} className='cphelperAfterMain'>\n          <Input\n            className='cpHospitalInput'\n            value={this.state.phoneid}\n            placeholder='NID/Birth Cirtificate no/ Passport No/ Phone No'\n            onChange={(e) => this.setState({phoneid: e.target.value})}\n          />\n          <br/>\n          {!this.state.imageId &&\n          <Dropzone\n            className=\"dz\"\n            onDrop={this.onDrop}\n            accept='image/*'\n            multiple={false}\n          >\n            <div><b>Drop an image or click to choose</b></div> \n          </Dropzone>}\n          {this.state.imageUrl &&\n            <img src={this.state.imageUrl} role='presentation' className='w-100 mv3' />\n          }\n          {this.state.phnno && this.state.imageUrl &&\n            <Button color=\"success\" className=\"searchBtHelper\" onClick={this.submit}><i className=\"fa fa-hdd \"/> &nbsp;Post</Button>\n          }\n          <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n          <Button type=\"submit\" value=\"Submit\" color=\"danger\" className=\"searchBtHelper\" onClick={this.lo}><i className=\"fa fa-sign-out-alt \"/> &nbsp;Log Out</Button>\n        \n          \n    <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n      <ModalHeader toggle={this.toggle}></ModalHeader>\n      <ModalBody className=\"crhosCenter\">\n        <img src =\"https://nazrangrad.ru/wp-content/uploads/2018/01/check-mark-2180770_960_720.png\" />\n        <br />\n        <br />\n       <h3>Report Successfully Added</h3>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"info\" onClick={this.back}>Back</Button>\n        <Button color=\"danger\" onClick={this.lo}>Logout</Button>\n      </ModalFooter>\n    </Modal>\n    </div>\n  < Footer />\n    </div>\n    );\n    \n  }\n  onDrop = (files) => {\n    \n    // prepare form data, use data key!\n    let data = new FormData()\n    data.append('data', files[0])\n\n    // use the file endpoint\n    fetch(' https://api.graph.cool/file/v1/cjnaaji6g014p0127lqfjvz73', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      return response.json()\n    }).then(image => {\n      this.setState({\n        imageId: image.id,\n        imageUrl: image.url,\n      })\n    })\n  }\n\n\nasync submit(){\n  await client.mutate({\n    mutation: gql`\n       mutation createReport($imageID: String, $imageUrl: String,  $phoneid: String){\n        createReport(\n         imageid : $imageID ,\n         imageUrl : $imageUrl ,\n         phoneid : $phoneid\n      ) {\n        id\n        phoneid\n        imageUrl\n      }\n    }\n    `,\n    \n    variables: {\n      imageID: this.state.nid,\n      imageUrl: this.state.imageUrl,\n      phoneid: this.state.phoneid\n    },\n\n  })\n  .then(result => {\n    this.toggle();\n  } \n    )\n  .catch(error => { console.log(error)});\n};\n\n}\n\nexport default CP_User;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  Table\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport ReactLoading from 'react-loading';\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ListUser = (props) => (\n  <Query\n    query={gql`\n    query allReports($phn: String, $nid: String){\n      \n      allReports(\n        filter : {\n          OR : [{\n            phoneid : $phn\n          }, {\n            phoneid : $nid\n          }\n          ]\n      }\n      ){\n        id\n        imageid\n        imageUrl\n        phoneid\n        createdAt\n        updatedAt\n      }\n    }\n    `}\n    variables={\n      {\n        phn : props.state.phone,\n        nid : props.state.nid\n      }\n    }\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <div>\n      <ReactLoading className=\"loadingScreenAnimation\" type={'spin'} color={'white'} height={'60%'} width={'60%'} />\n      </div>;\n      if (error) return <p>Error :(</p>;\n\n      return data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n         \n          \n        <Col key={id+1} xs=\"auto\">\n          \n        <Card style={{width: '20rem'}}>\n        <CardImg top src={imageUrl} alt=\"...\"/>\n        <CardBody>\n          \n          <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n          <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n          <Button key={id+2} onClick={() => {props.toggle(id)}} color=\"primary\">View</Button>\n          <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n          <Modal key={id+3} isOpen={props.state.modal && props.state.viewPresciptionId === id} toggle={props.toggle} >\n          <ModalHeader toggle={props.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n          <ModalBody>\n          <Table key={id+4} bordered>\n\n            <tbody>\n            <tr>\n            <td>\n            <img src={imageUrl} />\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Prescription Id : &nbsp; {id}\n            </td>\n            </tr>\n            <tr>\n            <td>\n            Created at :  &nbsp; {createdAt}\n            </td>\n            </tr>\n           \n            <tr>\n            <td>\n            Paitent contact no :  &nbsp; {phoneid}\n            </td>\n            </tr>\n        \n        \n            <tr>\n            <td>\n            Last Updated :  &nbsp; {updatedAt}\n            </td>\n            </tr>\n            </tbody>\n          </Table>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={props.toggle}>Back</Button>\n          </ModalFooter>\n          </Modal>\n\n        </CardBody>\n        </Card>\n        </Col>\n      ));\n    }}\n  </Query>\n  );\n\nclass UserReport extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.back = this.back.bind(this);\n    \n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n    else {\n        this.state = {\n        modal: false,\n        viewPresciptionId: null,\n        logInfoId : this.props.history.location.state.logInfo[0],\n        logInfoToken : this.props.history.location.state.logInfo[1],\n        phone : this.props.history.location.state.logInfo[3],\n        nid : this.props.history.location.state.logInfo[2],\n        uname : this.props.history.location.state.logInfo[4],\n        \n      }\n    }\n\n  }\n\n  back() {\n    this.props.history.push({\n      pathname: '/userdashboard',\n      state : {logInfo: [this.state.logInfoToken, \n        this.state.logInfoId,\n        this.state.phone,\n        this.state.nid,\n        this.state.uname\n      ] }\n    });\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      \n      </Navbar>\n      <div>\n      <Row className=\"helper\">\n\n      <ListUser toggle={this.toggle} state={this.state} delete={this.delete} preDelete={this.preDelete} up={this.up}/>\n      </Row>\n      <Button type=\"submit\" value=\"Submit\" color=\"info\" className=\"searchBtHelper\" onClick={this.back}><i className=\"fa fa-angle-double-left \"/> &nbsp;Back</Button>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default UserReport;\n","import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  Row,\n  Col,\n  Navbar,\n  Form, \n  Modal, \n  ModalHeader, \n  ModalBody, \n  ModalFooter,\n  FormGroup,\n  Input,\n  Table,\n  Alert\n } from \"reactstrap\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport gql from \"graphql-tag\";\nimport {client} from \"../../index\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { withApollo } from 'react-apollo';\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nclass SearchReportDoc extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '', \n      inputText: '', \n      mode:'view',\n      result : []\n    };\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.display = this.display.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    if (typeof(props.history.location.state) == 'undefined' || props.history.location.state == null) {\n      this.props.history.push({\n        pathname: '/unauth',\n      });\n    }\n  }\n\n  toggle(viewPresciptionId) {\n    this.setState({\n      modal: !this.state.modal,\n      viewPresciptionId\n    });\n  }\n\n  handleChange(e) {\n    this.setState({ inputText: e.target.value });\n  }\n  \n  handleSave() {\n    this.setState({text: this.state.inputText, mode: 'view'});\n  }\n\n  handleEdit() {\n    this.setState({mode: 'edit'});\n  }\n\n  logOut(){\n    this.props.history.push({\n      pathname: '/auth',\n    });\n  }\n\n  display(){\n    client.query({\n      variables: { searchText: this.state.inputText },\n      query: gql`\n        query allReports($searchText: String!){\n      \n          allReports(\n            filter : {\n              phoneid : $searchText\n            }\n          ){\n            id\n            imageid\n            imageUrl\n            phoneid\n            createdAt\n            updatedAt\n          }\n          \n        }\n      `,\n      \n    })\n    .then(result => { \n      \n      this.setState({\n        result: result\n      });\n\n     this.handleEdit();\n      console.log(this.state.result.data.allReports);\n      \n      \n     })\n    .catch(error => { console.log(error) });\n  }\n  \n  render () {\n    if(this.state.mode === 'view') {\n      return (\n\n        <div>\n        <div >\n         <Alert className=\"searchbar\" color=\"danger\">\n         <br/>\n         <h2>\n         <i className=\"fa fa-search \"/> \n         &nbsp;&nbsp;Search for Report <br/>\n         </h2>\n         <form>\n        <Input className=\"searchboxheight\" type=\"text\" placeholder=\"Search using nid/phone/any kind of id\" id=\"inputText\" onChange={this.handleChange} required/>\n        <br />\n        <Button size=\"lg\" color=\"primary\" onClick={this.display}>\n          <i className=\"nc-icon nc-zoom-split\" />  Search\n        </Button> <br />\n        </form>\n        <Button color=\"warning\" size=\"lg\" onClick={this.logOut}>LogOut</Button>\n        </Alert>\n      \n       </div>\n       <Footer />\n       </div>\n\n        \n      );\n    } else {\n      return (\n\n        <div className=\"content\">\n      <Navbar expand=\"lg\" color=\"dark\">\n      <Form inline className=\"ml-auto\">\n       <FormGroup >\n        <Input type=\"text\" placeholder=\"Search\" id=\"searchText\" onChange={this.handleChange}/>\n      </FormGroup>\n      <Button  color=\"neutral\" icon round onClick={this.display}>\n       <i className=\"nc-icon nc-zoom-split\"></i>\n     </Button>\n      </Form>\n      </Navbar>\n      <div>\n      <Row>\n\n      {this.state.result.data.allReports.length === 0 &&\n        <div className=\"searchCenter\">\n          <Alert color=\"danger\">\n          <h3>\n          No report found corresponding to given id/nid/phone/passport/birthcirtificate.\n        </h3>\n          </Alert>\n         <h4>\n           <Alert color=\"info\">\n           You have inserted\n           <Alert color=\"light\">\n           \n        <pre>\n          {this.state.inputText}\n        </pre>\n        </Alert>\n           </Alert>\n       \n        </h4>\n        \n       </div>\n        \n      }\n     \n     {  \n        \n         this.state.result.data.allReports.map(({ id, imageid, imageUrl, phoneid, updatedAt, createdAt}) => (\n          \n          <Col key={id+1} xs=\"auto\">\n          \n          <Card style={{width: '20rem'}}>\n          <CardImg top src={imageUrl} alt=\"...\"/>\n          <CardBody>\n            \n            <CardText><b>Report added using (id/phone):</b> {phoneid}</CardText> \n            <CardText><b>Prescription Added :</b> {createdAt}</CardText>\n            <Button key={id+2} onClick={() => {this.toggle(id)}} color=\"primary\">View</Button>\n            <a key={id+4} href={imageUrl} target=\"_blank\"><Button  color=\"primary\">Download</Button></a>\n            <Modal key={id+3} isOpen={this.state.modal && this.state.viewPresciptionId === id} toggle={this.toggle} >\n            <ModalHeader toggle={this.toggle}><p>Report Registered using ID/Phone : <b><i>{phoneid}</i></b></p></ModalHeader>\n            <ModalBody>\n            <Table key={id+4} bordered>\n  \n              <tbody>\n              <tr>\n              <td>\n              <img src={imageUrl} />\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Prescription Id : &nbsp; {id}\n              </td>\n              </tr>\n              <tr>\n              <td>\n              Created at :  &nbsp; {createdAt}\n              </td>\n              </tr>\n             \n              <tr>\n              <td>\n              Paitent contact no :  &nbsp; {phoneid}\n              </td>\n              </tr>\n          \n          \n              <tr>\n              <td>\n              Last Updated :  &nbsp; {updatedAt}\n              </td>\n              </tr>\n              </tbody>\n            </Table>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggle}>Back</Button>\n            </ModalFooter>\n            </Modal>\n\n          </CardBody>\n          </Card>\n          </Col>\n      ))\n      }\n\n      </Row>\n      </div>\n      \n      <Button className=\"searchBtHelper\" color=\"warning\" onClick={this.logOut}>LogOut</Button>\n      <Footer />\n      </div>\n\n      );\n    }\n  }\n}\n\n\nexport default withApollo(SearchReportDoc);\n","import React from \"react\";\nimport { GraphQLClient } from 'graphql-request';\n\nconst client = new GraphQLClient('https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73', {\n headers : {\n}\n});\n\nclass Reg extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n       email: \"rid@wan2.com\",\n       password : \"llalal\"\n      \n      };\n      this.handleChange = this.handleChange.bind(this);\n      this.reg = this.reg.bind(this);\n    }\n\n  handleChange(evt) {\n    this.setState({ [evt.target.id]: evt.target.value });\n  }\n\n  reg() {\n    return client.request(`\n     mutation(\n       $email : String!\n       $pass : String!\n     ){\n      createUser(\n        authProvider : {\n          email : {\n            email : $email\n            password : $pass\n          }\n        }\n        \n      ){\n        id\n      }\n    }\n   \n  `,\n  {\n    email : this.state.email,\n    pass : this.state.password\n  })\n }\n\n  render() {\n   return (\n      \n    <div className=\"authMain\">\n    Hi\n    </div>\n   \n   \n  );\n  }\n}\n\nexport default Reg;\n","import Dashboard from \"layouts/Dashboard/Dashboard.jsx\";\nimport Auth from \"../views/Auth/Auth.jsx\";\nimport Unauth from \"../views/Unauth/Unauth.jsx\";\nimport Search from \"../views/Search/Search.jsx\";\nimport Docdash from \"../views/Docdash/Docdash.jsx\";\nimport CP_doc from \"../components/CP_doc/CP_doc.jsx\";\nimport Docsearch from \"../views/Docsearch/Docsearch.jsx\";\nimport Doc_Prescription_Update from \"../components/Doc_Prescription_Update/Doc_Prescription_Update.jsx\";\nimport UserDashboard from \"../views/UserDashboard/UserDashboard.jsx\";\nimport UserPrescription from \"../views/UserPrescription/UserPrescription.jsx\";\nimport HospitalDashboard from \"../views/HospitalDashboard/HospitalDashboard.jsx\";\nimport CP_Hospital from \"../components/CP_Hospital/CP_Hospital.jsx\";\nimport SearchReport from \"../views/SearchReport/SearchReport.jsx\";\nimport CP_User from \"../components/CP_User/CP_User.jsx\";\nimport UserReport from \"../views/UserReport/UserReport.jsx\";\nimport SearchReportDoc from \"../views/SearchReportDoc/SearchReportDoc.jsx\";\nimport Reg from \"../components/Reg/Reg.jsx\";\n\nvar indexRoutes = [\n    {\n        path: \"/auth\",\n        name: \"Auth\",\n        component: Auth\n    },\n    {\n        path: \"/unauth\",\n        name: \"Unauth\",\n        component: Unauth\n    },\n    {\n        path: \"/search\",\n        name: \"Search\",\n        component: Search\n    },\n    {\n        path: \"/docdash\",\n        name: \"Docdash\",\n        component: Docdash\n    },\n    {\n        path: \"/cp_doc\",\n        name: \"CP_doc\",\n        component: CP_doc\n    },\n    {\n        path: \"/cp_hospital\",\n        name: \"CP_Hospital\",\n        component: CP_Hospital\n    },\n    {\n        path: \"/docsearch\",\n        name: \"Docsearch\",\n        component: Docsearch\n    },\n    {\n        path: \"/doc_prescription_update\",\n        name: \"Doc_Prescription_Update\",\n        component: Doc_Prescription_Update\n    },\n    {\n        path: \"/userdashboard\",\n        name: \"UserDashboard\",\n        component: UserDashboard\n    },\n    {\n        path: \"/userprescription\",\n        name: \"UserPrescription\",\n        component: UserPrescription\n    },\n    {\n        path: \"/hospitaldashboard\",\n        name: \"HospitalDashboard\",\n        component: HospitalDashboard\n    },\n    {\n        path: \"/searchreport\",\n        name: \"SearchReport\",\n        component: SearchReport\n    },\n    {\n        path: \"/cp_user\",\n        name: \"CP_User\",\n        component: CP_User\n    },\n    {\n        path: \"/userreport\",\n        name: \"UserReport\",\n        component: UserReport\n    },\n    {\n        path: \"/searchreportdoc\",\n        name: \"SearchReportDoc\",\n        component: SearchReportDoc\n    },\n    {\n        path: \"/reg\",\n        name: \"Reg\",\n        component: Reg\n    },\n    \n    { path: \"/\", name: \"Home\", component: Dashboard },\n];\n\nexport default indexRoutes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"assets/scss/paper-dashboard.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/external/external.css\";\nimport indexRoutes from \"routes/index.jsx\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst hist = createBrowserHistory();\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  uri: \"https://api.graph.cool/simple/v1/cjnaaji6g014p0127lqfjvz73\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <BrowserRouter>\n  <Router history={hist}>\n  \n    <Switch>\n      {indexRoutes.map((prop, key) => {\n        return <Route path={prop.path} key={key} component={prop.component} />\n      })}\n    </Switch>\n   \n  </Router>\n  </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","const dashboard24HoursPerformanceChart = {\n  data: canvas => {\n    return {\n      labels: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\"\n      ],\n      datasets: [\n        {\n          borderColor: \"#6bd098\",\n          backgroundColor: \"#6bd098\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [300, 310, 316, 322, 330, 326, 333, 345, 338, 354]\n        },\n        {\n          borderColor: \"#f17e5d\",\n          backgroundColor: \"#f17e5d\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [320, 340, 365, 360, 370, 385, 390, 384, 408, 420]\n        },\n        {\n          borderColor: \"#fcc468\",\n          backgroundColor: \"#fcc468\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          borderWidth: 3,\n          data: [370, 394, 415, 409, 425, 445, 460, 450, 478, 484]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: true\n    },\n\n    tooltips: {\n      enabled: true\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            fontColor: \"#9f9f9f\",\n            beginAtZero: false,\n            maxTicksLimit: 5\n            //padding: 20\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"#ccc\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\",\n            display: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9f9f9f\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardEmailStatisticsChart = {\n\n  data: canvas => {\n    return {\n      labels: [1, 2, 3, 4],\n      datasets: [\n        {\n          label: \"Emails\",\n          pointRadius: 0,\n          pointHoverRadius: 0,\n          backgroundColor: [\"#e3e3e3\", \"#4acccd\", \"#fcc468\", \"#ef8157\"],\n          borderWidth: 0,\n          data: [40, 20, 30, 10]\n        }\n      ]\n    };\n  },\n  options: {\n    legend: {\n      display: true\n    },\n\n    pieceLabel: {\n      render: \"percentage\",\n      fontColor: [\"white\"],\n      precision: 2\n    },\n\n    tooltips: {\n      enabled: true\n    },\n\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            display: false\n          },\n          gridLines: {\n            drawBorder: false,\n            zeroLineColor: \"transparent\",\n            color: \"rgba(255,255,255,0.05)\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(255,255,255,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            display: false\n          }\n        }\n      ]\n    }\n  }\n};\n\nconst dashboardNASDAQChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    datasets: [\n      {\n        data: [0, 19, 15, 20, 30, 40, 40, 50, 25, 30, 50, 70],\n        fill: false,\n        borderColor: \"#fbc658\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#fbc658\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      },\n      {\n        data: [0, 5, 10, 12, 20, 27, 30, 34, 42, 45, 55, 63],\n        fill: false,\n        borderColor: \"#51CACF\",\n        backgroundColor: \"transparent\",\n        pointBorderColor: \"#51CACF\",\n        pointRadius: 4,\n        pointHoverRadius: 4,\n        pointBorderWidth: 8\n      }\n    ]\n  },\n  options: {\n    legend: {\n      display: false,\n      position: \"top\"\n    }\n  }\n};\n\nmodule.exports = {\n  dashboard24HoursPerformanceChart,\n  dashboardEmailStatisticsChart,\n  dashboardNASDAQChart\n};\n"],"sourceRoot":""}